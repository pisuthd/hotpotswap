[{"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/index.js":"1","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/App.js":"2","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/reportWebVitals.js":"3","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Navbar.js":"4","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Routes.js":"5","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useToasts.js":"6","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useEagerConnect.js":"7","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useInactiveListener.js":"8","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/connectors.js":"9","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Landing/Landing.js":"10","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Dashboard/Dashboard.js":"11","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/Burner.js":"12","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Mint/Mint.js":"13","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/utils/index.js":"14","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/TokenList.js":"15","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/VerifySources.js":"16","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/TokenDetails.js":"17","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/Activation.js":"18","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/Summary.js":"19","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/constants.js":"20","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/common.js":"21","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useInterval.js":"22","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Home/Home.js":"23","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/Trade.js":"24","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/Position.js":"25","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/LiquidityPanel.js":"26","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/TradePanel.js":"27"},{"size":825,"mtime":1612097115941,"results":"28","hashOfConfig":"29"},{"size":756,"mtime":1612613291975,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1612095172384,"results":"31","hashOfConfig":"29"},{"size":7896,"mtime":1613480988459,"results":"32","hashOfConfig":"29"},{"size":2930,"mtime":1613480778351,"results":"33","hashOfConfig":"29"},{"size":1559,"mtime":1612615312601,"results":"34","hashOfConfig":"29"},{"size":916,"mtime":1612099841737,"results":"35","hashOfConfig":"29"},{"size":1921,"mtime":1612099852445,"results":"36","hashOfConfig":"29"},{"size":196,"mtime":1612096798751,"results":"37","hashOfConfig":"29"},{"size":4259,"mtime":1613187993468,"results":"38","hashOfConfig":"29"},{"size":3524,"mtime":1612969023151,"results":"39","hashOfConfig":"29"},{"size":4467,"mtime":1612701407722,"results":"40","hashOfConfig":"29"},{"size":2618,"mtime":1613481009639,"results":"41","hashOfConfig":"29"},{"size":134,"mtime":1612704635657,"results":"42","hashOfConfig":"29"},{"size":1018,"mtime":1612967270767,"results":"43","hashOfConfig":"29"},{"size":10181,"mtime":1612701992594,"results":"44","hashOfConfig":"29"},{"size":258,"mtime":1612615907760,"results":"45","hashOfConfig":"29"},{"size":252,"mtime":1612615984859,"results":"46","hashOfConfig":"29"},{"size":243,"mtime":1612615997339,"results":"47","hashOfConfig":"29"},{"size":59,"mtime":1612965271918,"results":"48","hashOfConfig":"29"},{"size":695,"mtime":1612678704194,"results":"49","hashOfConfig":"29"},{"size":484,"mtime":1612671863924,"results":"50","hashOfConfig":"29"},{"size":7007,"mtime":1613481102494,"results":"51","hashOfConfig":"29"},{"size":3821,"mtime":1613488642771,"results":"52","hashOfConfig":"29"},{"size":343,"mtime":1613483796174,"results":"53","hashOfConfig":"29"},{"size":232,"mtime":1613484046331,"results":"54","hashOfConfig":"29"},{"size":3223,"mtime":1613488455017,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"11cplkt",{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"58"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"58"},"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/index.js",[],["131","132"],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/App.js",["133","134","135","136"],"import styled from 'styled-components'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route\n} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\"\nimport Routes from \"./components/Routes\"\nimport { ToastProvider } from \"./hooks/useToasts\"\n\nconst getLibrary = (provider) => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\nfunction App() {\n\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary} >\n      <ToastProvider>\n        <Router>\n          <Navbar />\n          <Routes />\n        </Router>\n      </ToastProvider>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/reportWebVitals.js",[],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Navbar.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Row,\n    Container as RawContainer,\n    Col,\n    NavItem,\n    NavLink,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    UncontrolledDropdown,\n    NavbarText,\n    Button,\n    Badge,\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n} from \"reactstrap\"\nimport {\n    Mail,\n    Menu,\n    MoreVertical,\n    User,\n    Inbox,\n    Phone,\n    Calendar,\n    Lock,\n    LogOut,\n    Shield\n} from \"react-feather\";\nimport { Link } from \"react-router-dom\"\nimport Blockies from 'react-blockies';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport LogoPNG from \"../assets/img/logo.png\"\nimport MetamaskSVG from \"../assets/img/metamask.svg\"\nimport useEagerConnect from \"../hooks/useEagerConnect\"\nimport useInactiveListener from \"../hooks/useInactiveListener\"\nimport { shortAddress } from \"../utils\"\n\nimport {\n    injected\n} from \"../connectors\"\n\nconst Brand = styled.img.attrs(props => ({\n    src: LogoPNG\n}))`\n    height: 35px; \n`\n\nconst Wrapper = styled(Navbar)`\n    min-height: 80px; \n\n    a {\n        color: inherit;\n        cursor: pointer; \n        margin-left: 5px;\n        margin-right: 5px; \n\n        :first-child {\n            margin-left: 0px;\n            margin-right: 10px;\n        }\n    }\n    \n    \n\n`\n\nconst Connector = styled.div`\n\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    padding: 5px;\n\n \n   font-size: 18px;\n   font-weight: 600;\n   text-transform: uppercase;\n\n\n    :hover {\n        cursor: pointer;\n        color: white;\n        background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(101deg, #78e4ff, #ff48fa);\n        background-origin: border-box;\n        background-clip: content-box, border-box;\n        box-shadow: none;\n    }\n\n    display: flex;\n    flex-direction: row;\n\n    img {\n        width: 48px;\n        height: 48px;\n    }\n\n    div {\n        flex: 70%;\n        display: flex; \n        align-items: center;\n\n        :first-child {\n            flex: 20%;\n        }\n        :last-child {\n            flex: 10%;\n        }\n\n    }\n\n`\n\nconst Container = styled(RawContainer)`\n    \n     \n`\n\n\nconst Connectors = [\n    {\n        name: \"Metamask\",\n        connector: injected,\n        icon: MetamaskSVG\n    },\n]\n\nconst Main = () => {\n\n    const [isOpen, setOpen] = useState(false);\n    const [loginModal, setLoginModal] = useState(false);\n    const context = useWeb3React()\n    const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n    // handle logic to recognize the connector currently being activated\n    const [activatingConnector, setActivatingConnector] = useState()\n\n    // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n    const triedEager = useEagerConnect()\n\n    // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n    useInactiveListener(!triedEager || !!activatingConnector)\n\n    const toggle = useCallback(() => {\n        setOpen(!isOpen)\n    }, [isOpen])\n\n    const toggleModal = useCallback(() => {\n        setLoginModal(!loginModal)\n    }, [loginModal])\n\n    return (\n        <>\n            <Modal isOpen={loginModal} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Choose Wallet Provider</ModalHeader>\n                <ModalBody>\n                    {Connectors.map((item, index) => {\n                        const { connector, name, icon } = item\n                        return (\n                            <Connector\n                                key={index}\n                                onClick={() => {\n                                    setActivatingConnector(connector)\n                                    activate(connector)\n                                    setLoginModal(false)\n                                }}\n                            >\n                                <div>\n                                    <img src={icon} alt={`wallet-icon-${index}`} />\n                                </div>\n                                <div>\n                                    {name}\n                                </div>\n                                <div>\n                                    {/* TODO : PUT CONNECTION STATUS */}\n                                </div>\n                            </Connector>\n                        )\n                    })}\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>Close</Button>\n                </ModalFooter>\n            </Modal>\n            <Wrapper color=\"transparent\" light expand=\"md\">\n\n                <Container>\n                    <NavbarBrand>\n                        <Link to=\"/\">\n                            <Brand />\n                        </Link>\n                    </NavbarBrand>\n                    <NavbarToggler onClick={toggle} />\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink>\n                                    <Link  to=\"/trade\">Trade</Link>\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink>\n                                    <Link  to=\"/#about\">How To Start</Link>\n                                </NavLink>\n                            </NavItem> \n                            <NavItem>\n                                <NavLink>\n                                    <Link to=\"/rules\">GitHub</Link>\n                                </NavLink>\n                            </NavItem>\n                            {!account\n                                ?\n                                <Button color=\"warning\" onClick={toggleModal}>\n                                    Connect Wallet\n                                </Button>\n                                :\n                                <UncontrolledDropdown className=\"pr-1\">\n                                    <DropdownToggle nav >\n                                        <Blockies\n                                            seed={account}\n                                            className=\"rounded-circle width-35\"\n                                        />\n                                    </DropdownToggle>\n                                    <DropdownMenu right>\n                                        <DropdownItem disabled>\n                                            <div className=\"font-small-3\">\n                                                {shortAddress(account)}\n                                            </div>\n                                        </DropdownItem>\n                                        <DropdownItem divider />\n                                        <DropdownItem >\n                                            <div\n                                                onClick={() => {\n                                                    deactivate()\n                                                }}\n                                            >\n                                                <LogOut size={16} className=\"mr-1\" /> Exit\n                                                    </div>\n                                        </DropdownItem>\n                                    </DropdownMenu>\n                                </UncontrolledDropdown>\n                            }\n                        </Nav>\n                    </Collapse>\n                </Container>\n\n            </Wrapper>\n        </>\n    )\n}\n\nexport default Main","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Routes.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"import React, { useState, useCallback } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n    Route,\n    Link,\n    useLocation\n} from \"react-router-dom\";\nimport styled from \"styled-components\"\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n    Container,\n    Jumbotron,\n    Row,\n    Col,\n    Button,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n    Nav,\n    NavItem,\n    Dropdown,\n    DropdownItem,\n    DropdownToggle,\n    DropdownMenu,\n    NavLink\n} from \"reactstrap\"\nimport Home from \"./Home/Home\"\nimport Trade from \"./Trade/Trade\"\n\nconst Wrapper = styled(Container)`\n    margin-top: 20px;\n`\n\nconst Tab = styled.div`\n    overflow: hidden;\n    border: 1px solid black;\n    background-color: #f1f1f1; \n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n`\n\nconst TabItem = styled(Link)`\n    background-color: inherit;\n    float: left;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 14px 16px;\n    transition: 0.3s;\n    color: inherit; \n\n    ${props => props.active ? `\n        background-color: black;\n        color: white;\n        :hover {\n            color: white;\n        }\n        \n    ` : `\n        :hover {\n            background-color: #ddd; \n            color: inherit;\n        }\n    `}\n\n`\n\nconst TabContent = styled.div`\n     \n    padding: 6px 12px;\n    border: 1px solid black;\n    border-top: none;\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n`\n\n\nconst Routes = () => {\n    const context = useWeb3React()\n    const { connector, library, chainId, account, activate, deactivate, active, error } = context\n    const location = useLocation();\n\n    // if (!account) {\n    //     return <Landing />\n    // }\n\n    return (\n        <Wrapper>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route path=\"/trade\">\n                    <Trade />\n                </Route>\n                <Redirect to=\"/\" />\n            </Switch>\n            {/* <Tab>\n                <TabItem active={location?.pathname === \"/\"} to=\"/\">Dashboard</TabItem>\n                <TabItem active={location?.pathname === \"/mint\"} to=\"/mint\">Mint Assets</TabItem>\n                <TabItem active={location?.pathname === \"/burner\"} to=\"/burner\">Setup Burner</TabItem>\n            </Tab>\n            <TabContent>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Dashboard />\n                    </Route>\n                    <Route  path=\"/mint\">\n                        <Mint />\n                    </Route>\n                    <Route path=\"/burner\">\n                        <Burner />\n                    </Route>\n                    <Redirect to=\"/\" />\n                </Switch>\n            </TabContent> */}\n        </Wrapper>\n\n    )\n}\n\nexport default Routes","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useToasts.js",[],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useEagerConnect.js",["190"],"\nimport { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n\nconst useEagerConnect = () => {\n    const { activate, active } = useWeb3React()\n\n    const [tried, setTried] = useState(false)\n\n    useEffect(() => {\n        injected.isAuthorized().then((isAuthorized) => {\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true)\n                })\n            } else {\n                setTried(true)\n            }\n        })\n    }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (!tried && active) {\n            setTried(true)\n        }\n    }, [tried, active])\n\n    return tried\n}\n\nexport default useEagerConnect","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useInactiveListener.js",["191"],"\nimport { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n\n\nconst useInactiveListener = (suppress = false) => {\n    const { active, error, activate } = useWeb3React()\n\n    useEffect(() => {\n        const { ethereum } = window\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleConnect = () => {\n                console.log(\"Handling 'connect' event\")\n                activate(injected)\n            }\n            const handleChainChanged = (chainId) => {\n                console.log(\"Handling 'chainChanged' event with payload\", chainId)\n                activate(injected)\n            }\n            const handleAccountsChanged = (accounts) => {\n                console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n                if (accounts.length > 0) {\n                    activate(injected)\n                }\n            }\n            const handleNetworkChanged = (networkId) => {\n                console.log(\"Handling 'networkChanged' event with payload\", networkId)\n                activate(injected)\n            }\n\n            ethereum.on('connect', handleConnect)\n            ethereum.on('chainChanged', handleChainChanged)\n            ethereum.on('accountsChanged', handleAccountsChanged)\n            ethereum.on('networkChanged', handleNetworkChanged)\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('connect', handleConnect)\n                    ethereum.removeListener('chainChanged', handleChainChanged)\n                    ethereum.removeListener('accountsChanged', handleAccountsChanged)\n                    ethereum.removeListener('networkChanged', handleNetworkChanged)\n                }\n            }\n        }\n    }, [active, error, suppress, activate])\n}\n\nexport default useInactiveListener","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/connectors.js",[],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Landing/Landing.js",["192","193","194","195","196","197","198","199","200","201","202","203"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Alert, Container, Jumbotron, Row, Col, Button, InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport TokenList from \"../TokenList\"\n\n\nconst Wrapper = styled(Container)`\n     \n\n    .jumbotron { \n        color: dark;\n        background: rgb(238,174,202);\n        background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\n        border-radius: 8px; \n\n    }\n    .search { \n        margin-top: 20px;\n        margin-bottom: 30px;\n    }\n\n`\n\nconst Card = styled(\n    ({ className }) => {\n\n        return (\n            <Col className={className} lg=\"4\" xs=\"12\">\n                <div className=\"-body\">\n\n                </div>\n            </Col>\n        )\n    })`\n    padding: 15px;\n    >.-body {\n        border : 1px solid black;\n        border-radius: 8px;\n        padding: 10px;\n        min-height: 160px \n    }\n    `\n\nconst Headline = styled(\n    ({ className }) => {\n        return (\n            <div className={className}>\n                <div>\n                    <h3>Live the Live Market</h3>\n                    <p>\n                        {/* Introducing Elliptix, a synthetic asset protocol where BUSD is the underlying collateral for mint tokens that track the Stock Market Indexes around the world available for you on Binance Smart Chain. */}\n                        Introduction Hotpotswap, \n                    </p>\n                </div>\n\n            </div>\n        )\n    })`\n    text-align: center; \n    padding-top: 30px;\n    padding-bottom: 30px;\n    \n    div {\n        margin-left: auto;\n        margin-right: auto; \n        max-width: 800px;\n    }\n    `\n\nconst HowToUse = styled(\n    ({ className }) => {\n        return (\n            <Col className={className} xs=\"12\">\n                <div className=\"-body\">\n                    HowToUse\n                </div>\n            </Col>\n        )\n    })`\n    padding: 15px;\n    >.-body {\n        border : 1px solid black;\n        border-radius: 8px;\n        padding: 20px;\n        min-height: 400px \n    }\n    `\n\nconst Landing = () => {\n    return (\n        <Wrapper>\n            {/* <Alert color=\"primary\">\n                We're live on Binance Smart Chain. \n            </Alert> */}\n            <Headline />\n\n\n            <Row>\n                <Col xs=\"12\">\n                    <TokenList\n\n                    />\n                </Col>\n                {/* <Col xs=\"4\">\n                    <div className=\"jumbotron\">\n                        <h5>Live the Live Market</h5>\n                        Introducing Elliptix, a synthetic asset protocol where BUSD is the underlying collateral for mint tokens that track the Stock Market Indexes.\n                        \n                    </div>\n                </Col> */}\n            </Row>\n\n            {/* header */}\n            {/* <Jumbotron className=\"jumbotron\">\n                <h4 className=\"display-3\">Article nor prepare chicken you him now.</h4>\n                <p className=\"lead\">You disposal strongly quitting his endeavor two settling him.</p>\n                <Row className=\"search\">\n                    <Col sm=\"12\" lg=\"6\">\n                        <InputGroup size=\"lg\">\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText><Search /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input />\n                        </InputGroup>\n                    </Col>\n                </Row>\n                <ul>\n                    <li>Don't have an address? View demo.</li>\n                    <li>What is DeFi?</li>\n                    <li>Binance Smart Chain?</li>\n                </ul>\n            </Jumbotron> */}\n            {/* stats */}\n            {/* <Row>\n                <Card\n                    title={\"Total Burned\"}\n                />\n                <Card\n                    title={\"Total Assets\"}\n                />\n                <Card\n                    title={\"xxxx\"}\n                />\n            </Row>\n            <Row>\n                <HowToUse />\n            </Row> */}\n\n        </Wrapper>\n    )\n}\n\nexport default Landing",["204","205"],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Dashboard/Dashboard.js",["206","207","208","209","210","211","212","213"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col, Alert, Button } from \"reactstrap\"\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { shortAddress } from \"../../utils\"\n\nconst Wrapper = styled.div`\n    padding: 20px;\n`\n\nconst Card = styled(\n    ({ className, title, subtitle }) => {\n        return (\n            <Col className={className} xs=\"4\">\n                <div>\n                    <h4>{title}</h4>\n                    <h2>{subtitle}</h2>\n                </div>\n            </Col>\n        )\n    })`\n    margin-top: 5px;\n    margin-bottom: 5px; \n    >div {\n        border: 1px solid black;\n        border-radius: 6px; \n        padding: 10px;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        text-align: center;\n        h2 {\n            font-size: 24px;\n        }\n        h4 {\n            font-size: 18px;\n        }\n\n    }\n    \n    `\n\nconst Token = styled(\n    ({ className, symbol, balance = 0, balanceInUsd = 0 }) => {\n        return (\n            <Col className={className} xs=\"3\">\n                <div>\n                    <div>\n                        {symbol}\n                        \n                    </div>\n                    <div>\n                        {(balance).toLocaleString()}\n                        <p>${balanceInUsd.toLocaleString()}</p>\n                    </div>\n                </div>\n            </Col>\n        )\n    })` \n    margin-top: 5px;\n    margin-bottom: 5px; \n    >div {\n        border: 1px solid black;\n        border-radius: 6px; \n        padding: 10px;\n        padding-top: 20px;\n        padding-bottom: 10px;\n        display: flex;\n        flex-direction: row;\n        \n        div {\n            font-size: 18px;\n            flex: 50%;\n\n            :first-child {\n                font-weight: 600;\n                \n            }\n\n            :last-child { \n                text-align: right;\n                p {\n                    font-weight: 400;\n                    font-size: 14px;\n                }\n            }\n        }\n\n        \n\n    }\n    `\n\nconst Dashboard = () => {\n\n    const context = useWeb3React()\n    const { account } = context\n\n\n    return (\n        <Wrapper>\n            <Row style={{ justifyContent: \"center\", marginTop: 20 }}>\n                <Card\n                    title={\"Total Assets\"}\n                    subtitle={`$${(0).toFixed(2)}`}\n                />\n                <Card\n                    title={\"Total Burned\"}\n                    subtitle={`$${(0).toFixed(2)}`}\n                />\n            </Row>\n            <Row style={{ marginTop: 20, marginBottom: 5 }}>\n                <Col xs=\"12\">\n                    <h5>Account Overview</h5>\n                </Col>\n            </Row>\n            <Row>\n                <Token\n                    symbol={\"ETH\"}\n                    balance={0.116}\n                    balanceInUsd={550.23}\n                />\n                <Token\n                     symbol={\"pyHKD\"}\n                     balance={350.11}\n                     balanceInUsd={49.67}\n                />\n                <Token\n                     symbol={\"pyJPY\"}\n                     balance={10280.66}\n                     balanceInUsd={92.77}\n                />\n                {/* <Token\n                     symbol={\"ETH\"}\n                     balance={0.116}\n                     balanceInUsd={550.23}\n                /> */}\n            </Row>\n        </Wrapper>\n    )\n}\n\nexport default Dashboard","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/Burner.js",["214","215","216","217","218","219"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col, Alert, Button } from \"reactstrap\"\nimport { AlertTriangle } from \"react-feather\"\nimport { useToasts } from \"../../hooks/useToasts\"\nimport VerifySources from \"./VerifySources\"\nimport TokenDetails from \"./TokenDetails\"\nimport Activation from \"./Activation\"\nimport Summary from \"./Summary\"\n\n\nconst Wrapper = styled.div`\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n\n    p {\n        font-size: 14px;\n    }\n\n    .container {\n        margin-top: 10px;\n        margin-bottom: 20px;\n    }\n    .progressbar {\n        counter-reset: step; \n    }\n    .progressbar li {\n        list-style-type: none;\n        width: 25%;\n        float: left;\n        font-size: 14px;\n        position: relative;\n        text-align: center; \n        color: #7d7d7d;\n    }\n    .progressbar li:before {\n        width: 30px;\n        height: 30px;\n        content: counter(step);\n        counter-increment: step;\n        line-height: 30px;\n        border: 2px solid #7d7d7d;\n        display: block;\n        text-align: center;\n        margin: 0 auto 10px auto;\n        border-radius: 50%;\n        background-color: white;\n\n       \n\n    }\n    .progressbar li:after {\n        width: 100%;\n        height: 2px;\n        content: '';\n        position: absolute;\n        background-color: #7d7d7d;\n        top: 15px;\n        left: -50%;\n        z-index: -1;\n    }\n    .progressbar li:first-child:after {\n        content: none;\n    }\n    .progressbar li.active {\n        color: black;\n        \n    }\n    .progressbar li.active:before {\n        border-color: black;\n        background-color: black;\n        color: white;\n    }\n    .progressbar li.active + li:after {\n        background-color: black;\n    }\n\n`\n\nconst Steps = styled.div`\n    \n    display: flex;\n    flex-direction: row;\n    padding: 10px;\n    justify-content: center;\n`\n\nconst Step = styled.div`\n    height: 50px;\n    width: 50px;\n    border-radius: 50%;\n    display: flex; \n    align-items: center;\n    justify-content: center;\n    margin: 10px;\n\n    ${props => props.active ? `\n        background-color: black;\n        color: white;\n    `: `\n        background-color: transparent;\n        border: 1px solid black;\n\n    `}\n\n`\n\nconst Footer = styled.div`\n\n    padding-top: 20px;\n    padding-bottom: 20px;\n\n    button {\n        margin-left: 5px;\n        :first-child {\n            margin-left: 0px;\n        }\n    }\n`\n\n\nconst Burner = () => {\n\n    const [currentStep, setCurrentStep] = useState(1)\n    const [data, setData] = useState({})\n\n    console.log(\"data --> \", data)\n\n    return (\n        <Wrapper>\n            <Alert color=\"secondary\">\n                <p><AlertTriangle size={14} /> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n            </Alert>\n\n            <div class=\"container\">\n                <ul class=\"progressbar\">\n                    <li className={currentStep >= 1 && \"active\"}>Verify sources</li>\n                    <li className={currentStep >= 2 && \"active\"} >Your token details</li>\n                    <li className={currentStep >= 3 && \"active\"}>Activation</li>\n                    <li className={currentStep >= 4 && \"active\"}>Summary</li>\n                </ul>\n            </div>\n\n            {currentStep === 1 && (<VerifySources data={data} setData={setData} />)}\n            {currentStep === 2 && (<TokenDetails data={data} setData={setData} />)}\n            {currentStep === 3 && (<Activation />)}\n            {currentStep === 4 && (<Summary />)}\n\n            <Footer>\n                <Button disabled={true} color=\"secondary\">Reset</Button>\n                <Button disabled={currentStep === 1} onClick={() => setCurrentStep(1)} color=\"info\">Back</Button>\n                <Button disabled={currentStep === 2} onClick={() => setCurrentStep(2)} color=\"primary\">Next</Button>\n            </Footer>\n\n        </Wrapper>\n    )\n}\n\nexport default Burner",["220","221"],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Mint/Mint.js",["222","223","224","225"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col, Alert, Button } from \"reactstrap\"\n\nconst Wrapper = styled.div`\n    padding: 20px;\n`\n\nconst Card = styled(\n    ({ className, symbol, pair, rate = 0, totalMinted = 0 }) => {\n        return (\n            <Col className={className} xs=\"4\">\n                <div>\n                    <h2>{symbol}</h2>\n                    <h4>{pair}</h4>\n                    <div>\n                        <div>\n                            <h4>\n                                Rate\n                            </h4>\n                            <p>\n                                {rate.toFixed(2)}\n                            </p> \n                        </div>\n                        <div>\n                            <h4>\n                                Total Minted\n                            </h4>\n                            <p>\n                                {totalMinted.toLocaleString()}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n        )\n    })`\n    margin-top: 5px;\n    margin-bottom: 5px;\n    >div {\n        border: 1px solid black;\n        border-radius: 4px; \n        padding: 10px;\n        padding-top: 20px;\n        padding-bottom: 20px; \n        h2, h4 {\n            font-size: 24px;\n            text-align: center;\n        }\n        h4 {\n            font-size: 16px;\n        }\n        div {\n            display: flex;\n            flex-direction: row;\n            font-size: 16px;\n            margin-top: 5px;\n             \n            div { \n                flex: 50%;\n                display: flex;\n                flex-direction: column;\n                h4, p {\n                    margin-left: auto;\n                    margin-right: auto;\n                }\n            }\n        }\n    }\n    \n    `\n\nconst Mint = () => {\n    return (\n        <Wrapper>\n            <Row>\n                <Card\n                    symbol={\"pyHKD\"}\n                    pair={\"USD/HKD\"}\n                    rate={7.1}\n                    totalMinted={5646.77}\n                />\n                <Card\n                    symbol={\"pyJPY\"}\n                    pair={\"USD/JPY\"}\n                    rate={110.23}\n                    totalMinted={102110.88}\n                />\n                <Card\n                    symbol={\"pyTHA\"}\n                    pair={\"USD/BAHT\"}\n                    rate={32.11}\n                    totalMinted={80711.23}\n                />\n            </Row>\n\n        </Wrapper>\n    )\n}\n\nexport default Mint","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/utils/index.js",[],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/TokenList.js",["226","227","228","229"],"import React, { useState, useCallback, useEffect } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col } from \"reactstrap\"\nimport { ethers } from \"ethers\"\nimport { BSC_NODE } from \"../constants\"\n\nconst Container = styled.div`\n    \n    h5 {\n        margin-bottom: 10px;\n    }\n`\n\nconst Table = styled(\n    ({ className }) => {\n        return (\n            <div className={className}>\n\n            </div>\n        )\n    })`\n    border : 1px solid black;\n    border-radius: 8px;\n    padding: 20px;\n    min-height: 400px \n    `\n\n\n\nconst TokenList = ({ title }) => {\n\n    useEffect(() => {\n\n        (async () => {\n\n            const provider = new ethers.providers.JsonRpcProvider(BSC_NODE)\n            const blockNumber = await provider.getBlockNumber()\n            console.log(\"blockNumber --> \", blockNumber)\n\n        })()\n\n\n\n    }, [])\n\n    return (\n        <Container>\n            {title && (<h5>{title}</h5>)}\n            <Table\n\n            />\n        </Container>\n    )\n\n}\n\nexport default TokenList","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/VerifySources.js",["230","231","232","233","234"],"import React, { useState, useCallback, useEffect } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col, Alert, Button, Form, FormGroup, Label, Input, FormText, Table } from \"reactstrap\"\nimport axios from \"axios\"\nimport useInterval from \"../../hooks/useInterval\"\nimport { SuccessIcon, ErrorIcon } from \"../common\"\n\nconst Wrapper = styled.div`\n    h5,p  {\n        text-align: center;\n    }\n`\n\n\nconst Body = styled(Row)`\n    margin-top: 30px;\n`\n\nconst Config = styled(Col).attrs(props => ({\n    lg: \"6\",\n    xs: \"12\"\n}))`\n    \n`\n\nconst Info = styled(Col).attrs(props => ({\n    lg: \"6\",\n    xs: \"12\"\n}))`\n    border: 1px solid black;\n    border-radius: 4px; \n    padding: 10px;\n\n    table {\n        font-size: 12px;\n    }\n    th {\n        width: 20%;\n    }\n\n`\n\n\nconst SOURCES = [1, 2]\n\nconst VerifySources = ({ data, setData }) => {\n\n    const [currentSource, setCurrentSource] = useState(SOURCES[0])\n    const [interval, setInterval] = useState(1000)\n\n    useInterval(() => {\n        fetchUrls(data)\n        setInterval(15000)\n    }, interval);\n\n    useEffect(() => {\n        let initialValue = {}\n        for (let source of SOURCES) {\n            let apiUrl\n            let apiPath\n            switch (source) {\n                case 1:\n                    apiUrl = \"https://api.ratesapi.io/api/latest?base=USD&symbols=HKD\"\n                    apiPath = \"rates.HKD\"\n                    break\n                default:\n                    apiUrl = `https://api.exchangeratesapi.io/latest?symbols=HKD&base=USD`\n                    apiPath = \"rates.HKD\"\n            }\n\n            initialValue[`source${source}Url`] = apiUrl\n            initialValue[`source${source}Path`] = apiPath\n        }\n        setData({ ...data, ...initialValue })\n    }, [])\n\n    const fetchUrls = async (data) => {\n\n        let responses = {}\n\n        for (let item of Object.keys(data)) {\n            if (item.indexOf(\"Url\") !== -1) {\n                const prefix = item.split(\"Url\")[0]\n                let valid = false\n                try {\n                    const response = await axios.get(data[item])\n                    if (response && response.data) {\n                        valid = true\n                        responses[`${prefix}Response`] = response.data\n\n                        if (data[`source${currentSource}Path`]) {\n                            const paths = data[`source${currentSource}Path`].split(\".\")\n                            let value = response.data\n                            for (let path of paths) {\n                                value = value[path]\n                            }\n                            if (value) {\n                                responses[`${prefix}Value`] = value\n                            }\n                        }\n\n                    }\n                } catch (e) {\n\n                }\n                responses[`${prefix}Valid`] = valid\n            }\n        }\n\n        setData({ ...data, ...responses })\n    }\n\n    return (\n        <Wrapper>\n            <h5>Verify Sources</h5>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam.</p>\n            <Body>\n                <Config>\n                    <Form>\n                        <FormGroup>\n                            <Input type=\"select\" value={currentSource} onChange={(e) => setCurrentSource(Number(e.target.value))} name=\"select\" id=\"sourceSelection\">\n                                {SOURCES.map((source, index) => (<option value={source} key={index}>Source#{source}</option>))}\n                            </Input>\n                        </FormGroup>\n                        {(() => {\n\n                            let pathValid = false\n                            if (data[`source${currentSource}Response`] && data[`source${currentSource}Path`]) {\n                                const paths = data[`source${currentSource}Path`].split(\".\")\n                                let value = data[`source${currentSource}Response`]\n                                for (let path of paths) {\n                                    value = value[path]\n                                }\n                                if (value) {\n                                    pathValid = true\n                                }\n\n                            }\n\n                            return (\n                                <>\n                                    <FormGroup>\n                                        <Label for=\"apiSource\">\n                                            API URL\n                                            {data[`source${currentSource}Valid`] ? <SuccessIcon /> : <ErrorIcon />}\n                                        </Label>\n                                        <Input\n                                            type=\"textarea\"\n                                            name=\"apiUrl\"\n                                            rows=\"4\"\n                                            id=\"apiUrl\"\n                                            value={data[`source${currentSource}Url`]}\n                                            onChange={(e) => {\n                                                setInterval(3000)\n                                                setData({ ...data, [`source${currentSource}Url`]: e.target.value })\n                                            }}\n                                        />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"apiPath\">\n                                            Path\n                                            {pathValid ? <SuccessIcon /> : <ErrorIcon />}\n                                        </Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"apiPath\"\n                                            id=\"apiPath\"\n                                            value={data[`source${currentSource}Path`]}\n                                            onChange={(e) => {\n                                                setInterval(3000)\n                                                setData({ ...data, [`source${currentSource}Path`]: e.target.value })\n                                            }}\n                                        />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"apiPath\">\n                                            Value\n                                        </Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"apiValue\"\n                                            id=\"apiValue\"\n                                            value={data[`source${currentSource}Value`]}\n                                            disabled\n                                        />\n                                    </FormGroup>\n                                </>\n                            )\n                        })()}\n                    </Form>\n                </Config>\n                <Info>\n                    {SOURCES.map((sourceId) => {\n                        return (\n                            <Table key={sourceId}>\n                                <tbody>\n                                    <tr>\n                                        <th scope=\"row\">Source#{sourceId}</th>\n                                        <td >\n                                            <div style={{ wordWrap: \"break-word\", maxWidth: \"400px\" }}>\n                                                {data[`source${sourceId}Url`]}\n                                            </div>\n\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th scope=\"row\">Path#{sourceId}</th>\n                                        <td>\n                                            <div style={{ wordWrap: \"break-word\", maxWidth: \"400px\" }}>\n                                                {data[`source${sourceId}Path`]}\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th scope=\"row\">Value#{sourceId}</th>\n                                        <td>\n                                            <div style={{ wordWrap: \"break-word\", maxWidth: \"400px\" }}>\n                                                {data[`source${sourceId}Value`]}\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        )\n                    })}\n                    {(() => {\n                        let median = 0\n                        let count = 0\n                        for (let item of Object.keys(data)) {\n                            if (item.indexOf(\"Value\") !== -1) {\n                                console.log(\"item --> \", item)\n                                median += Number(data[item])\n                                count += 1\n                            }\n                        }\n                        median = median/count \n\n                        return (\n                            <Table>\n                                <tbody>\n                                    <tr>\n                                        <th scope=\"row\">Median</th>\n                                        <td>{median.toFixed(6)}</td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        )\n                    })() \n                    }\n                </Info>\n            </Body>\n\n        </Wrapper>\n    )\n}\n\nexport default VerifySources","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/TokenDetails.js",["235","236","237","238","239","240","241"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col, Alert, Button } from \"reactstrap\"\n\n\nconst TokenDetails = () => {\n    return (\n        <div>TokenDetails</div>\n    )\n}\n\nexport default TokenDetails","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/Activation.js",["242","243","244","245","246","247","248"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col, Alert, Button } from \"reactstrap\"\n\n\nconst Activation = () => {\n    return (\n        <div>Activation</div>\n    )\n}\n\nexport default Activation","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Burner/Summary.js",["249","250","251","252","253","254","255"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Row, Col, Alert, Button } from \"reactstrap\"\n\n\nconst Summary = () => {\n    return (\n        <div>Summary</div>\n    )\n}\n\nexport default Summary","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/constants.js",[],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/common.js",[],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/hooks/useInterval.js",[],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Home/Home.js",["256","257","258","259","260","261","262","263","264","265","266","267"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Alert, Container, Jumbotron, Row, Col, Button, InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport { useHistory } from \"react-router-dom\";\nimport FlagHK from \"../../assets/img/flag-hkg.png\"\nimport FlagUS from \"../../assets/img/flag-us.png\"\nimport FlagJP from \"../../assets/img/flag-jp.png\"\n\nconst Wrapper = styled(Container)`\n     \n\n    .jumbotron { \n        color: dark;\n        background: rgb(238,174,202);\n        background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\n        border-radius: 8px; \n\n    }\n    .search { \n        margin-top: 20px;\n        margin-bottom: 30px;\n    }\n\n`\n\nconst Headline = styled(\n    ({ className }) => {\n        return (\n            <div className={className}>\n                <div>\n                    <h3>Live the Live Market</h3>\n                    <p>\n                        Introducing Hotpotswap, a synthetic asset protocol where BUSD is the underlying collateral for mint tokens that track the Stock Market Indexes.\n                    </p>\n                </div>\n            </div>\n        )\n    })`\n    text-align: center; \n    padding-top: 30px;\n    padding-bottom: 30px;\n    \n    div {\n        margin-left: auto;\n        margin-right: auto; \n        max-width: 800px;\n    }\n    `\n\nconst TokenList = styled(\n    ({ className }) => {\n\n        let history = useHistory()\n\n        const toTrading = () => {\n            history.push(\"/trade\")\n        }\n\n        return (\n            <div className={className}>\n                <div onClick={toTrading} className=\"card enabled\">\n                    <div>\n                        <img src={FlagUS} alt={`icon-1`} />\n                    </div>\n                    <div style={{minWidth : 200}}>\n                        <h5>Perpetual Name</h5>\n                        <p>Dow Jones Index</p>\n                    </div>\n                    <div style={{minWidth : 160}}>\n                        <h5>Status</h5>\n                        <p>Active</p>\n                    </div>\n\n                    <div>\n                        <h5>Index Price</h5>\n                        <p>$7220.00</p>\n                    </div>\n                    <div>\n                        <h5>Mark Price</h5>\n                        <p>$6440.00</p>\n                    </div>\n                    <div style={{marginTop: 24}}>\n                        <u>Trade Now</u>\n                    </div>\n                </div>\n                <div className=\"card disabled\">\n                    <div>\n                        <img src={FlagHK} alt={`icon-2`} />\n                    </div>\n                    <div style={{minWidth : 200}}>\n                        <h5>Perpetual Name</h5>\n                        <p>Hang Seng Index</p>\n                    </div>\n                    <div style={{minWidth : 160}}>\n                        <h5>Status</h5>\n                        <p>Coming Soon</p>\n                    </div>\n\n                </div>\n                <div className=\"card disabled\">\n                    <div>\n                        <img src={FlagJP} alt={`icon-3`} />\n                    </div>\n                    <div style={{minWidth : 200}}>\n                        <h5>Perpetual Name</h5>\n                        <p>Nikkei 225 Index</p>\n                    </div>\n                    <div style={{minWidth : 160}}>\n                        <h5>Status</h5>\n                        <p>Coming Soon</p>\n                    </div>\n\n                </div>\n            </div>\n        )\n    })`\n    \n    padding: 20px;\n\n    .card {\n        margin-top: 15px;\n        margin-bottom: 15px;\n        border: 1px solid #ddd;\n        border-radius: 8px;\n        padding: 20px;\n        padding-top: 10px;\n        padding-bottom: 10px;\n        background: transparent;\n        display: flex;\n        flex-direction: row;\n        cursor: pointer;\n        overflow: hidden;\n\n        img {\n            width: 64px;\n            height: 64px;\n        }\n\n        h5 {\n            margin: 0px;\n            margin-top: 12px; \n            margin-bottom: 2px;\n            font-size: 14px;\n        }\n        p {\n            font-size: 18px;\n        }\n\n        div { \n            display: flex; \n            flex-direction: column;\n            :not(:first-child) {\n                margin-left: 20px; \n                min-width: 160px;\n            }\n        }\n\n\n    }\n    .enabled {\n        :hover {\n            cursor: pointer;\n            color: white;\n            background-image: linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0)), linear-gradient(101deg, #78e4ff, #ff48fa);\n            background-origin: border-box;\n            background-clip: content-box, border-box;\n            box-shadow: none;\n        }\n    }\n\n    .disabled {\n        background: #ddd;\n        opacity: 0.6;\n        cursor: not-allowed;\n    }\n\n    .soon {\n        \n    }\n\n    `\n\nconst HowToUse = styled(\n    ({ className }) => {\n        return (\n            <Col className={className} xs=\"12\">\n                <div className=\"-body\">\n                    HowToUse\n                </div>\n            </Col>\n        )\n    })`\n    padding: 15px;\n    >.-body {\n        border : 1px solid black;\n        border-radius: 8px;\n        padding: 20px;\n        min-height: 400px \n    }\n    `\n\nconst Landing = () => {\n    return (\n        <Wrapper>\n            {/* <Alert color=\"primary\">\n                We're live on Binance Smart Chain. \n            </Alert> */}\n            <Headline />\n            <TokenList />\n\n            {/* header */}\n            {/* <Jumbotron className=\"jumbotron\">\n                <h4 className=\"display-3\">Article nor prepare chicken you him now.</h4>\n                <p className=\"lead\">You disposal strongly quitting his endeavor two settling him.</p>\n                <Row className=\"search\">\n                    <Col sm=\"12\" lg=\"6\">\n                        <InputGroup size=\"lg\">\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText><Search /></InputGroupText>\n                            </InputGroupAddon>\n                            <Input />\n                        </InputGroup>\n                    </Col>\n                </Row>\n                <ul>\n                    <li>Don't have an address? View demo.</li>\n                    <li>What is DeFi?</li>\n                    <li>Binance Smart Chain?</li>\n                </ul>\n            </Jumbotron> */}\n            {/* stats */}\n            {/* <Row>\n                <Card\n                    title={\"Total Burned\"}\n                />\n                <Card\n                    title={\"Total Assets\"}\n                />\n                <Card\n                    title={\"xxxx\"}\n                />\n            </Row>\n            <Row>\n                <HowToUse />\n            </Row> */}\n\n        </Wrapper>\n    )\n}\n\nexport default Landing","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/Trade.js",["268","269","270","271","272","273","274","275","276","277"],"/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/Position.js",["278","279"],"\nimport React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n    border: 1px solid black;\n    min-height: 200px;\n\n    margin-top: 20px;\n\n`\n\nconst Position = () => {\n    return (\n        <Wrapper>\n            You have no position.\n        </Wrapper>\n    )\n}\n\nexport default Position","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/LiquidityPanel.js",["280","281","282"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\n\nconst LiquidityPanel = () => {\n    return (\n        <div>\n            LiquidityPanel\n        </div>\n    )\n}\n\nexport default LiquidityPanel","/home/pisuthd/Desktop/elliptix/hotpotswap/client/src/components/Trade/TradePanel.js",["283","284","285","286","287","288","289","290","291","292"],"import React, { useState, useCallback } from 'react';\nimport styled from \"styled-components\"\nimport { Alert, Table, Container, Jumbotron, Row, Col, Button, InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\"\nimport { Plus } from \"react-feather\"\n\nconst Wrapper = styled.div`\n\n    button {\n        :first-child {\n            margin-right: 3px;\n        }\n    }\n\n    h2 {\n        margin: 0px;\n        margin-top: 10px;\n    }\n\n    \n\n`\n\nconst Description = styled.div`\n    font-size: 14px;\n    margin-bottom: 10px;\n`\n\n\nconst TradePanel = () => {\n\n    const [side, setSide] = useState(0) // 0 - long, 1 - short\n\n    return (\n        <Wrapper>\n            <Description>\n                simply dummy text of the printing and typesetting industry.\n            </Description>\n            {/* <div>\n                <Button outline={side !== 0} onClick={() => setSide(0)} color=\"primary\">Long</Button>\n                <Button outline={side !== 1} onClick={() => setSide(1)} color=\"danger\">Short</Button>\n            </div> */}\n            <div>\n\n                <Table>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">\n                                <div style={{ marginTop: 3 }}>Your Deposit</div>\n                            </th>\n                            <td style={{display : \"flex\", flexDirection : \"row\"}}> \n                                <div style={{ marginTop: 3 }}>5588.76 BUSD</div>\n                                <Button style={{marginLeft: 5}} color=\"info\" size=\"sm\">\n                                    <Plus size={16}/>\n                                </Button>\n                            </td>\n                            </tr>\n                        <tr>\n                            <th scope=\"row\">\n                                <div style={{ marginTop: 5 }}>Position</div>\n                            </th>\n                            <td>\n                                <Button outline={side !== 0} onClick={() => setSide(0)} color=\"primary\">Long</Button>\n                                <Button outline={side !== 1} onClick={() => setSide(1)} color=\"danger\">Short</Button>\n                            </td>\n                        </tr>\n\n                        {side === 0 && (\n                            <tr>\n                                <th scope=\"row\">\n                                    <div  >Long Price</div>\n                                </th>\n                                <td>\n                                    31622.67 BUSD\n                                </td>\n                            </tr>\n                        )\n                        }\n                        {side === 1 && (\n                            <tr>\n                                <th scope=\"row\">\n                                    <div  >Short Price</div>\n                                </th>\n                                <td>\n                                    31657.12 BUSD\n                                </td>\n                            </tr>\n                        )\n                        }\n\n                    </tbody>\n                </Table>\n\n\n            </div>\n        </Wrapper>\n    )\n}\n\nexport default TradePanel",{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":1,"column":8,"nodeType":"299","messageId":"300","endLine":1,"endColumn":14},{"ruleId":"297","severity":1,"message":"301","line":6,"column":3,"nodeType":"299","messageId":"300","endLine":6,"endColumn":9},{"ruleId":"297","severity":1,"message":"302","line":7,"column":3,"nodeType":"299","messageId":"300","endLine":7,"endColumn":11},{"ruleId":"297","severity":1,"message":"303","line":8,"column":3,"nodeType":"299","messageId":"300","endLine":8,"endColumn":8},{"ruleId":"297","severity":1,"message":"304","line":4,"column":5,"nodeType":"299","messageId":"300","endLine":4,"endColumn":13},{"ruleId":"297","severity":1,"message":"305","line":8,"column":5,"nodeType":"299","messageId":"300","endLine":8,"endColumn":8},{"ruleId":"297","severity":1,"message":"306","line":10,"column":5,"nodeType":"299","messageId":"300","endLine":10,"endColumn":8},{"ruleId":"297","severity":1,"message":"307","line":18,"column":5,"nodeType":"299","messageId":"300","endLine":18,"endColumn":15},{"ruleId":"297","severity":1,"message":"308","line":20,"column":5,"nodeType":"299","messageId":"300","endLine":20,"endColumn":10},{"ruleId":"297","severity":1,"message":"309","line":28,"column":5,"nodeType":"299","messageId":"300","endLine":28,"endColumn":9},{"ruleId":"297","severity":1,"message":"310","line":29,"column":5,"nodeType":"299","messageId":"300","endLine":29,"endColumn":9},{"ruleId":"297","severity":1,"message":"311","line":30,"column":5,"nodeType":"299","messageId":"300","endLine":30,"endColumn":17},{"ruleId":"297","severity":1,"message":"312","line":31,"column":5,"nodeType":"299","messageId":"300","endLine":31,"endColumn":9},{"ruleId":"297","severity":1,"message":"313","line":32,"column":5,"nodeType":"299","messageId":"300","endLine":32,"endColumn":10},{"ruleId":"297","severity":1,"message":"314","line":33,"column":5,"nodeType":"299","messageId":"300","endLine":33,"endColumn":10},{"ruleId":"297","severity":1,"message":"315","line":34,"column":5,"nodeType":"299","messageId":"300","endLine":34,"endColumn":13},{"ruleId":"297","severity":1,"message":"316","line":35,"column":5,"nodeType":"299","messageId":"300","endLine":35,"endColumn":9},{"ruleId":"297","severity":1,"message":"317","line":37,"column":5,"nodeType":"299","messageId":"300","endLine":37,"endColumn":11},{"ruleId":"297","severity":1,"message":"318","line":41,"column":10,"nodeType":"299","messageId":"300","endLine":41,"endColumn":27},{"ruleId":"297","severity":1,"message":"319","line":41,"column":43,"nodeType":"299","messageId":"300","endLine":41,"endColumn":66},{"ruleId":"297","severity":1,"message":"320","line":141,"column":13,"nodeType":"299","messageId":"300","endLine":141,"endColumn":22},{"ruleId":"297","severity":1,"message":"321","line":141,"column":24,"nodeType":"299","messageId":"300","endLine":141,"endColumn":31},{"ruleId":"297","severity":1,"message":"322","line":141,"column":33,"nodeType":"299","messageId":"300","endLine":141,"endColumn":40},{"ruleId":"297","severity":1,"message":"323","line":141,"column":73,"nodeType":"299","messageId":"300","endLine":141,"endColumn":79},{"ruleId":"297","severity":1,"message":"324","line":141,"column":81,"nodeType":"299","messageId":"300","endLine":141,"endColumn":86},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"327","line":3,"column":22,"nodeType":"299","messageId":"300","endLine":3,"endColumn":28},{"ruleId":"297","severity":1,"message":"318","line":11,"column":10,"nodeType":"299","messageId":"300","endLine":11,"endColumn":27},{"ruleId":"297","severity":1,"message":"319","line":11,"column":43,"nodeType":"299","messageId":"300","endLine":11,"endColumn":66},{"ruleId":"297","severity":1,"message":"328","line":14,"column":5,"nodeType":"299","messageId":"300","endLine":14,"endColumn":14},{"ruleId":"297","severity":1,"message":"305","line":15,"column":5,"nodeType":"299","messageId":"300","endLine":15,"endColumn":8},{"ruleId":"297","severity":1,"message":"306","line":16,"column":5,"nodeType":"299","messageId":"300","endLine":16,"endColumn":8},{"ruleId":"297","severity":1,"message":"329","line":17,"column":5,"nodeType":"299","messageId":"300","endLine":17,"endColumn":11},{"ruleId":"297","severity":1,"message":"330","line":18,"column":5,"nodeType":"299","messageId":"300","endLine":18,"endColumn":15},{"ruleId":"297","severity":1,"message":"331","line":19,"column":5,"nodeType":"299","messageId":"300","endLine":19,"endColumn":20},{"ruleId":"297","severity":1,"message":"332","line":20,"column":5,"nodeType":"299","messageId":"300","endLine":20,"endColumn":19},{"ruleId":"297","severity":1,"message":"333","line":21,"column":5,"nodeType":"299","messageId":"300","endLine":21,"endColumn":10},{"ruleId":"297","severity":1,"message":"334","line":22,"column":5,"nodeType":"299","messageId":"300","endLine":22,"endColumn":8},{"ruleId":"297","severity":1,"message":"335","line":23,"column":5,"nodeType":"299","messageId":"300","endLine":23,"endColumn":12},{"ruleId":"297","severity":1,"message":"304","line":24,"column":5,"nodeType":"299","messageId":"300","endLine":24,"endColumn":13},{"ruleId":"297","severity":1,"message":"336","line":25,"column":5,"nodeType":"299","messageId":"300","endLine":25,"endColumn":17},{"ruleId":"297","severity":1,"message":"337","line":26,"column":5,"nodeType":"299","messageId":"300","endLine":26,"endColumn":19},{"ruleId":"297","severity":1,"message":"338","line":27,"column":5,"nodeType":"299","messageId":"300","endLine":27,"endColumn":17},{"ruleId":"297","severity":1,"message":"339","line":28,"column":5,"nodeType":"299","messageId":"300","endLine":28,"endColumn":12},{"ruleId":"297","severity":1,"message":"340","line":37,"column":7,"nodeType":"299","messageId":"300","endLine":37,"endColumn":10},{"ruleId":"297","severity":1,"message":"341","line":45,"column":7,"nodeType":"299","messageId":"300","endLine":45,"endColumn":14},{"ruleId":"297","severity":1,"message":"342","line":71,"column":7,"nodeType":"299","messageId":"300","endLine":71,"endColumn":17},{"ruleId":"297","severity":1,"message":"320","line":83,"column":13,"nodeType":"299","messageId":"300","endLine":83,"endColumn":22},{"ruleId":"297","severity":1,"message":"321","line":83,"column":24,"nodeType":"299","messageId":"300","endLine":83,"endColumn":31},{"ruleId":"297","severity":1,"message":"322","line":83,"column":33,"nodeType":"299","messageId":"300","endLine":83,"endColumn":40},{"ruleId":"297","severity":1,"message":"343","line":83,"column":42,"nodeType":"299","messageId":"300","endLine":83,"endColumn":49},{"ruleId":"297","severity":1,"message":"344","line":83,"column":51,"nodeType":"299","messageId":"300","endLine":83,"endColumn":59},{"ruleId":"297","severity":1,"message":"345","line":83,"column":61,"nodeType":"299","messageId":"300","endLine":83,"endColumn":71},{"ruleId":"297","severity":1,"message":"323","line":83,"column":73,"nodeType":"299","messageId":"300","endLine":83,"endColumn":79},{"ruleId":"297","severity":1,"message":"324","line":83,"column":81,"nodeType":"299","messageId":"300","endLine":83,"endColumn":86},{"ruleId":"297","severity":1,"message":"346","line":84,"column":11,"nodeType":"299","messageId":"300","endLine":84,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":22,"column":8,"nodeType":"349","endLine":22,"endColumn":10,"suggestions":"350"},{"ruleId":"297","severity":1,"message":"325","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":18},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"351","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"328","line":3,"column":28,"nodeType":"299","messageId":"300","endLine":3,"endColumn":37},{"ruleId":"297","severity":1,"message":"329","line":3,"column":49,"nodeType":"299","messageId":"300","endLine":3,"endColumn":55},{"ruleId":"297","severity":1,"message":"330","line":3,"column":57,"nodeType":"299","messageId":"300","endLine":3,"endColumn":67},{"ruleId":"297","severity":1,"message":"331","line":3,"column":69,"nodeType":"299","messageId":"300","endLine":3,"endColumn":84},{"ruleId":"297","severity":1,"message":"332","line":3,"column":86,"nodeType":"299","messageId":"300","endLine":3,"endColumn":100},{"ruleId":"297","severity":1,"message":"333","line":3,"column":102,"nodeType":"299","messageId":"300","endLine":3,"endColumn":107},{"ruleId":"297","severity":1,"message":"352","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":16},{"ruleId":"297","severity":1,"message":"353","line":25,"column":7,"nodeType":"299","messageId":"300","endLine":25,"endColumn":11},{"ruleId":"297","severity":1,"message":"354","line":71,"column":7,"nodeType":"299","messageId":"300","endLine":71,"endColumn":15},{"ruleId":"293","replacedBy":"355"},{"ruleId":"295","replacedBy":"356"},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"351","line":3,"column":20,"nodeType":"299","messageId":"300","endLine":3,"endColumn":25},{"ruleId":"297","severity":1,"message":"329","line":3,"column":27,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"318","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":27},{"ruleId":"297","severity":1,"message":"319","line":4,"column":43,"nodeType":"299","messageId":"300","endLine":4,"endColumn":66},{"ruleId":"297","severity":1,"message":"357","line":5,"column":10,"nodeType":"299","messageId":"300","endLine":5,"endColumn":22},{"ruleId":"297","severity":1,"message":"343","line":96,"column":13,"nodeType":"299","messageId":"300","endLine":96,"endColumn":20},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"305","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":13},{"ruleId":"297","severity":1,"message":"306","line":3,"column":15,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"358","line":5,"column":10,"nodeType":"299","messageId":"300","endLine":5,"endColumn":19},{"ruleId":"297","severity":1,"message":"359","line":81,"column":7,"nodeType":"299","messageId":"300","endLine":81,"endColumn":12},{"ruleId":"297","severity":1,"message":"360","line":89,"column":7,"nodeType":"299","messageId":"300","endLine":89,"endColumn":11},{"ruleId":"293","replacedBy":"361"},{"ruleId":"295","replacedBy":"362"},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"351","line":3,"column":20,"nodeType":"299","messageId":"300","endLine":3,"endColumn":25},{"ruleId":"297","severity":1,"message":"329","line":3,"column":27,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"305","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":13},{"ruleId":"297","severity":1,"message":"306","line":3,"column":15,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"351","line":3,"column":20,"nodeType":"299","messageId":"300","endLine":3,"endColumn":25},{"ruleId":"297","severity":1,"message":"329","line":3,"column":27,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"363","line":3,"column":66,"nodeType":"299","messageId":"300","endLine":3,"endColumn":74},{"ruleId":"347","severity":1,"message":"364","line":75,"column":8,"nodeType":"349","endLine":75,"endColumn":10,"suggestions":"365"},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"298","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":14},{"ruleId":"297","severity":1,"message":"305","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":13},{"ruleId":"297","severity":1,"message":"306","line":3,"column":15,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"351","line":3,"column":20,"nodeType":"299","messageId":"300","endLine":3,"endColumn":25},{"ruleId":"297","severity":1,"message":"329","line":3,"column":27,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"298","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":14},{"ruleId":"297","severity":1,"message":"305","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":13},{"ruleId":"297","severity":1,"message":"306","line":3,"column":15,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"351","line":3,"column":20,"nodeType":"299","messageId":"300","endLine":3,"endColumn":25},{"ruleId":"297","severity":1,"message":"329","line":3,"column":27,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"298","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":14},{"ruleId":"297","severity":1,"message":"305","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":13},{"ruleId":"297","severity":1,"message":"306","line":3,"column":15,"nodeType":"299","messageId":"300","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"351","line":3,"column":20,"nodeType":"299","messageId":"300","endLine":3,"endColumn":25},{"ruleId":"297","severity":1,"message":"329","line":3,"column":27,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"351","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"328","line":3,"column":28,"nodeType":"299","messageId":"300","endLine":3,"endColumn":37},{"ruleId":"297","severity":1,"message":"305","line":3,"column":39,"nodeType":"299","messageId":"300","endLine":3,"endColumn":42},{"ruleId":"297","severity":1,"message":"329","line":3,"column":49,"nodeType":"299","messageId":"300","endLine":3,"endColumn":55},{"ruleId":"297","severity":1,"message":"330","line":3,"column":57,"nodeType":"299","messageId":"300","endLine":3,"endColumn":67},{"ruleId":"297","severity":1,"message":"331","line":3,"column":69,"nodeType":"299","messageId":"300","endLine":3,"endColumn":84},{"ruleId":"297","severity":1,"message":"332","line":3,"column":86,"nodeType":"299","messageId":"300","endLine":3,"endColumn":100},{"ruleId":"297","severity":1,"message":"333","line":3,"column":102,"nodeType":"299","messageId":"300","endLine":3,"endColumn":107},{"ruleId":"297","severity":1,"message":"352","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":16},{"ruleId":"297","severity":1,"message":"354","line":184,"column":7,"nodeType":"299","messageId":"300","endLine":184,"endColumn":15},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"351","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"366","line":3,"column":17,"nodeType":"299","messageId":"300","endLine":3,"endColumn":26},{"ruleId":"297","severity":1,"message":"328","line":3,"column":28,"nodeType":"299","messageId":"300","endLine":3,"endColumn":37},{"ruleId":"297","severity":1,"message":"329","line":3,"column":49,"nodeType":"299","messageId":"300","endLine":3,"endColumn":55},{"ruleId":"297","severity":1,"message":"330","line":3,"column":57,"nodeType":"299","messageId":"300","endLine":3,"endColumn":67},{"ruleId":"297","severity":1,"message":"331","line":3,"column":69,"nodeType":"299","messageId":"300","endLine":3,"endColumn":84},{"ruleId":"297","severity":1,"message":"332","line":3,"column":86,"nodeType":"299","messageId":"300","endLine":3,"endColumn":100},{"ruleId":"297","severity":1,"message":"333","line":3,"column":102,"nodeType":"299","messageId":"300","endLine":3,"endColumn":107},{"ruleId":"297","severity":1,"message":"353","line":27,"column":7,"nodeType":"299","messageId":"300","endLine":27,"endColumn":11},{"ruleId":"297","severity":1,"message":"325","line":2,"column":17,"nodeType":"299","messageId":"300","endLine":2,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":2,"column":27,"nodeType":"299","messageId":"300","endLine":2,"endColumn":38},{"ruleId":"297","severity":1,"message":"325","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"298","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":14},{"ruleId":"297","severity":1,"message":"326","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":38},{"ruleId":"297","severity":1,"message":"351","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":15},{"ruleId":"297","severity":1,"message":"366","line":3,"column":24,"nodeType":"299","messageId":"300","endLine":3,"endColumn":33},{"ruleId":"297","severity":1,"message":"328","line":3,"column":35,"nodeType":"299","messageId":"300","endLine":3,"endColumn":44},{"ruleId":"297","severity":1,"message":"305","line":3,"column":46,"nodeType":"299","messageId":"300","endLine":3,"endColumn":49},{"ruleId":"297","severity":1,"message":"306","line":3,"column":51,"nodeType":"299","messageId":"300","endLine":3,"endColumn":54},{"ruleId":"297","severity":1,"message":"330","line":3,"column":64,"nodeType":"299","messageId":"300","endLine":3,"endColumn":74},{"ruleId":"297","severity":1,"message":"331","line":3,"column":76,"nodeType":"299","messageId":"300","endLine":3,"endColumn":91},{"ruleId":"297","severity":1,"message":"332","line":3,"column":93,"nodeType":"299","messageId":"300","endLine":3,"endColumn":107},{"ruleId":"297","severity":1,"message":"333","line":3,"column":109,"nodeType":"299","messageId":"300","endLine":3,"endColumn":114},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavbarText' is defined but never used.","'Badge' is defined but never used.","'Mail' is defined but never used.","'Menu' is defined but never used.","'MoreVertical' is defined but never used.","'User' is defined but never used.","'Inbox' is defined but never used.","'Phone' is defined but never used.","'Calendar' is defined but never used.","'Lock' is defined but never used.","'Shield' is defined but never used.","'Web3ReactProvider' is defined but never used.","'UnsupportedChainIdError' is defined but never used.","'connector' is assigned a value but never used.","'library' is assigned a value but never used.","'chainId' is assigned a value but never used.","'active' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'Router' is defined but never used.","'Jumbotron' is defined but never used.","'Button' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'Input' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'NavLink' is defined but never used.","'Tab' is assigned a value but never used.","'TabItem' is assigned a value but never used.","'TabContent' is assigned a value but never used.","'account' is assigned a value but never used.","'activate' is assigned a value but never used.","'deactivate' is assigned a value but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.","ArrayExpression",["369"],"'Alert' is defined but never used.","'Search' is defined but never used.","'Card' is assigned a value but never used.","'HowToUse' is assigned a value but never used.",["367"],["368"],"'shortAddress' is defined but never used.","'useToasts' is defined but never used.","'Steps' is assigned a value but never used.","'Step' is assigned a value but never used.",["367"],["368"],"'FormText' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'setData'. Either include them or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["370"],"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},"Update the dependencies array to be: [activate]",{"range":"375","text":"376"},"Update the dependencies array to be: [data, setData]",{"range":"377","text":"378"},[579,581],"[activate]",[1758,1760],"[data, setData]"]