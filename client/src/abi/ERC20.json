{
    "contractName": "ERC20",
    "abi": [
      {
        "inputs": [],
        "name": "faucet",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "tokenName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "tokenSymbol",
            "type": "string"
          },
          {
            "internalType": "uint8",
            "name": "tokenDecimals",
            "type": "uint8"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newMember",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "manager",
            "type": "address"
          }
        ],
        "name": "AddedSharedMember",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "oldMember",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "manager",
            "type": "address"
          }
        ],
        "name": "RemovedSharedMember",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newMember",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "manager",
            "type": "address"
          }
        ],
        "name": "ResetExclusiveMember",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "newMember",
            "type": "address"
          }
        ],
        "name": "addMember",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "burn",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "getMember",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "memberToCheck",
            "type": "address"
          }
        ],
        "name": "holdsRole",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "mint",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "memberToRemove",
            "type": "address"
          }
        ],
        "name": "removeMember",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "renounceMembership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "newMember",
            "type": "address"
          }
        ],
        "name": "resetMember",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "addMinter",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "removeMinter",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "addBurner",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "removeBurner",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "resetOwner",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "isMinter",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "isBurner",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\",\"methods\":{\"addBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Burner role is added.\"}},\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"addMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Minter role is added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\",\"params\":{\"value\":\"amount of tokens to burn.\"}},\"constructor\":{\"params\":{\"tokenDecimals\":\"The number of decimals to define token precision.\",\"tokenName\":\"The name which describes the new token.\",\"tokenSymbol\":\"The ticker abbreviation of the name. Ideally < 5 chars.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isBurner(address)\":{\"params\":{\"account\":\"The address which is checked for the Burner role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Burner.\"}},\"isMinter(address)\":{\"params\":{\"account\":\"The address which is checked for the Minter role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Minter.\"}},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\",\"params\":{\"recipient\":\"address to mint to.\",\"value\":\"amount of tokens to mint.\"},\"returns\":{\"_0\":\"True if the mint succeeded, or False.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Burner role is removed.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"removeMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Minter role is removed.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"resetOwner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The new holder of the Owner role.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"Burnable and mintable ERC20.\"},\"userdoc\":{\"methods\":{\"addBurner(address)\":{\"notice\":\"Add Burner role to account.\"},\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"addMinter(address)\":{\"notice\":\"Add Minter role to account.\"},\"constructor\":\"Constructs the SyntheticToken.\",\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"isBurner(address)\":{\"notice\":\"Checks if a given account holds the Burner role.\"},\"isMinter(address)\":{\"notice\":\"Checks if a given account holds the Minter role.\"},\"removeBurner(address)\":{\"notice\":\"Removes Burner role from account.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"removeMinter(address)\":{\"notice\":\"Remove Minter role from account.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"resetOwner(address)\":{\"notice\":\"Reset Owner role to account.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/SyntheticToken.sol\":\"SyntheticToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8610316b7096a19d9f99ae7587e393f1039211fd82d541e26a0693a76e8bc570\",\"urls\":[\"bzz-raw://cb7ca41b389fc0b5de53802af64d86ad0c92b4704eeb695bfabc7e79769fd64c\",\"dweb:/ipfs/Qmd6LUJURrcN7RBSLoporoAAeJ8cWtjGT96QKCaCeCofKN\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7521d73c0b2001a87ce17fdc3ff40191c0b7893b0c48a695011d615d8fda254f\",\"urls\":[\"bzz-raw://a8e2574c57b1cd86bb792748ad24bc1d7d62cce413f18d029a0217456926b067\",\"dweb:/ipfs/QmUuF5cqnokP3MAQtu4VKnewB8F5tycbvmAqbgEuQu7tTt\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/interfaces/IExpandedIERC20.sol\":{\"keccak256\":\"0x48bd1fdc99f59b186d5ce6bb228c830c1fc1587458ceb71260fe4b8a4a3c5519\",\"urls\":[\"bzz-raw://53f3ec2e57b5fa11995ce56dfcd45bcd574bf33fe9bed0c13df7aeb03d3325e1\",\"dweb:/ipfs/QmcZRJtmKHtmkPv7WywH7BReWD52Fxpnyy74wRisBhE1ef\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/Address.sol\":{\"keccak256\":\"0x95ab5946f04d7d1f6f1ddaae196b9aea974b8e39a6cf2f94d0678b54186cf952\",\"urls\":[\"bzz-raw://788aa249ac4dbf9ced05dc9f65038ee3a3e516ed6324099c8dd904f34fc5375a\",\"dweb:/ipfs/QmSM35jDe6EXVWxxo9qe574MQ4vV2qtq8NoWruLRe7jCWz\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/ERC20.sol\":{\"keccak256\":\"0xf16c3458e736d9209308668d6ca98039819837bf9ca42c86ba8487ce545ca07b\",\"urls\":[\"bzz-raw://069cc4dc2e7816bd76720052fc93fa323621729cfe8f627e1bf9207b1e9a0f3b\",\"dweb:/ipfs/QmVtyQRpuJuzFSt2KpGch72BdYZGvwcM3U4XDApyTw6ffn\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/ExpandedERC20.sol\":{\"keccak256\":\"0x1eaebcafaeb444b9300a988ad0e16c045963f3f62dbda36a40b57ac132de39d2\",\"urls\":[\"bzz-raw://3989c91c0b9d5b475c86e50d0e055e60e29eee5acbeea8faa08c5dc5204000f8\",\"dweb:/ipfs/QmQ9e7TTS3ngwERD9qKg9GxASmhgw73bVth9ZMXzTw2fNa\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/Lockable.sol\":{\"keccak256\":\"0xfe828b4a29f9f4610081793374ace7d88d9cb3a3d6fe13fa28097a04de879406\",\"urls\":[\"bzz-raw://6eedeeeb92e1be8721def0edf794b05d5e279a03eb489da05050de765ca04397\",\"dweb:/ipfs/QmXkp7HvFbCkugbhnUDi1MNMNuvkuPPX4odUphgSGKUGAe\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0xf2dbd6789bd61c3411b1897e37fd263c7de43d936735d59bbc63c37a24156ff2\",\"urls\":[\"bzz-raw://9b30b1d6aa612faf2bf1ef4841ea1f2e1fedd844072f66332f75c4037707f019\",\"dweb:/ipfs/Qmf9CQCEtw3fuLUh5co9svAboM3mAqagC52UBJnh3CCVxH\"]},\"/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/SyntheticToken.sol\":{\"keccak256\":\"0x4e9cce11bedbd55332157326575ea55031997f748677f9168fc0d6cb4f3ea3f5\",\"urls\":[\"bzz-raw://fb3e588a11b9f19fc0433e69aacd2f04c04da9df6a80cb60910ddc2193d85f2b\",\"dweb:/ipfs/QmTAZc2SJLvvZCnPoTGyW3kNWSnrDh5u84sZbbytxLJb68\"]}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b50604051620034d8380380620034d8833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040526020018051906020019092919050505082828282828160039080519060200190620001df929190620009de565b508060049080519060200190620001f8929190620009de565b506012600560006101000a81548160ff021916908360ff160217905550505062000228816200036760201b60201c565b62000255600060028111156200023a57fe5b600060028111156200024857fe5b336200038560201b60201c565b620002b3600160028111156200026757fe5b600060028111156200027557fe5b6000604051908082528060200260200182016040528015620002a65781602001602082028036833780820191505090505b506200053a60201b60201c565b62000310600280811115620002c457fe5b60006002811115620002d257fe5b6000604051908082528060200260200182016040528015620003035781602001602082028036833780820191505090505b506200053a60201b60201c565b5050506001600760006101000a81548160ff0219169083151502179055506200033e620006ef60201b60201c565b6200034e6200077460201b60201c565b6200035e6200079160201b60201c565b50505062000a8d565b80600560006101000a81548160ff021916908360ff16021790555050565b82600060028111156200039457fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff166002811115620003c457fe5b1462000438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000081525060200191505060405180910390fd5b600060066000868152602001908152602001600020905060018160010160006101000a81548160ff021916908360028111156200047157fe5b02179055508381600001819055506200049c8382600201620007ae60201b6200271a1790919060201c565b60006002811115620004aa57fe5b6006600086815260200190815260200160002060010160009054906101000a900460ff166002811115620004da57fe5b141562000533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018062003441603c913960400191505060405180910390fd5b5050505050565b82600060028111156200054957fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff1660028111156200057957fe5b14620005ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000081525060200191505060405180910390fd5b600060066000868152602001908152602001600020905060028160010160006101000a81548160ff021916908360028111156200062657fe5b0217905550838160000181905550620006518382600301620007c460201b620027281790919060201c565b600060028111156200065f57fe5b6006600086815260200190815260200160002060010160009054906101000a900460ff1660028111156200068f57fe5b1415620006e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180620034a06038913960400191505060405180910390fd5b5050505050565b600760009054906101000a900460ff1662000772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b565b6000600760006101000a81548160ff021916908315150217905550565b6001600760006101000a81548160ff021916908315150217905550565b620007c082826200080d60201b60201c565b5050565b60008090505b81518110156200080857620007fa83838381518110620007e657fe5b6020026020010151620008dc60201b60201c565b8080600101915050620007ca565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000895576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806200347d6023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616e6e6f74206164642030783020746f20612073686172656420726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000a2157805160ff191683800117855562000a52565b8280016001018555821562000a52579182015b8281111562000a5157825182559160200191906001019062000a34565b5b50905062000a61919062000a65565b5090565b62000a8a91905b8082111562000a8657600081600090555060010162000a6c565b5090565b90565b6129a48062000a9d6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806373cc802a116100de578063a9059cbb11610097578063ab3545e511610071578063ab3545e5146108dd578063d97c05be1461094b578063dd62ed3e14610999578063f44637ba14610a115761018e565b8063a9059cbb146107ed578063aa271e1a14610853578063aaa14ca3146108af5761018e565b806373cc802a146105c857806374d0a6761461060c5780637cdc1cb91461065a57806395d89b41146106c0578063983b2d5614610743578063a457c2d7146107875761018e565b8063313ce5671161014b57806342966c681161012557806342966c68146104985780634334614a146104c65780636be7658b1461052257806370a08231146105705761018e565b8063313ce567146103a857806339509351146103cc57806340c10f19146104325761018e565b8063028468581461019357806306fdde03146101d7578063095ea7b31461025a57806318160ddd146102c057806323b872dd146102de5780633092afd514610364575b600080fd5b6101d5600480360360208110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a55565b005b6101df610a85565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021f578082015181840152602081019050610204565b50505050905090810190601f16801561024c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a66004803603604081101561027057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b27565b604051808215151515815260200191505060405180910390f35b6102c8610b45565b6040518082815260200191505060405180910390f35b61034a600480360360608110156102f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b4f565b604051808215151515815260200191505060405180910390f35b6103a66004803603602081101561037a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c28565b005b6103b0610c59565b604051808260ff1660ff16815260200191505060405180910390f35b610418600480360360408110156103e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c70565b604051808215151515815260200191505060405180910390f35b61047e6004803603604081101561044857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d23565b604051808215151515815260200191505060405180910390f35b6104c4600480360360208110156104ae57600080fd5b8101908080359060200190929190505050610da6565b005b610508600480360360208110156104dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1f565b604051808215151515815260200191505060405180910390f35b61056e6004803603604081101561053857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e45565b005b6105b26004803603602081101561058657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd6565b6040518082815260200191505060405180910390f35b61060a600480360360208110156105de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061101e565b005b6106586004803603604081101561062257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104f565b005b6106a66004803603604081101561067057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111e0565b604051808215151515815260200191505060405180910390f35b6106c8611307565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107856004803603602081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a9565b005b6107d36004803603604081101561079d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113da565b604051808215151515815260200191505060405180910390f35b6108396004803603604081101561080357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114a7565b604051808215151515815260200191505060405180910390f35b6108956004803603602081101561086957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114c5565b604051808215151515815260200191505060405180910390f35b6108db600480360360208110156108c557600080fd5b81019080803590602001909291905050506114ec565b005b610909600480360360208110156108f357600080fd5b8101908080359060200190929190505050611666565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109976004803603604081101561096157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611721565b005b6109fb600480360360408110156109af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118b3565b6040518082815260200191505060405180910390f35b610a5360048036036020811015610a2757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061193a565b005b610a5d61196a565b610a656119ee565b610a7a600280811115610a7457fe5b82610e45565b610a82611a0b565b50565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b1d5780601f10610af257610100808354040283529160200191610b1d565b820191906000526020600020905b815481529060010190602001808311610b0057829003601f168201915b5050505050905090565b6000610b3b610b34611a28565b8484611a30565b6001905092915050565b6000600254905090565b6000610b5c848484611c27565b610c1d84610b68611a28565b610c188560405180606001604052806028815260200161287160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bce611a28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b611a30565b600190509392505050565b610c3061196a565b610c386119ee565b610c4e60016002811115610c4857fe5b82610e45565b610c56611a0b565b50565b6000600560009054906101000a900460ff16905090565b6000610d19610c7d611a28565b84610d148560016000610c8e611a28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fa890919063ffffffff16565b611a30565b6001905092915050565b600060016002811115610d3257fe5b610d3c81336111e0565b610d91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061284f6022913960400191505060405180910390fd5b610d9b8484612030565b600191505092915050565b600280811115610db257fe5b610dbc81336111e0565b610e11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061284f6022913960400191505060405180910390fd5b610e1b33836121f7565b5050565b6000610e2961196a565b610e3e600280811115610e3857fe5b836111e0565b9050919050565b81600280811115610e5257fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff166002811115610e8157fe5b14610ed7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612823602c913960400191505060405180910390fd5b82610ef86006600083815260200190815260200160002060000154336111e0565b610f4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129266024913960400191505060405180910390fd5b610f7583600660008781526020019081526020016000206003016123bb90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af60405160405180910390a450505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61102661196a565b61102e6119ee565b6110446000600281111561103e57fe5b82611721565b61104c611a0b565b50565b8160028081111561105c57fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff16600281111561108b57fe5b146110e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612823602c913960400191505060405180910390fd5b826111026006600083815260200190815260200160002060000154336111e0565b611157576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129266024913960400191505060405180910390fd5b61117f836006600087815260200190815260200160002060030161241990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f60405160405180910390a450505050565b6000806006600085815260200190815260200160002090506001600281111561120557fe5b8160010160009054906101000a900460ff16600281111561122257fe5b14156112465761123e838260020161251a90919063ffffffff16565b915050611301565b60028081111561125257fe5b8160010160009054906101000a900460ff16600281111561126f57fe5b14156112935761128b838260030161257790919063ffffffff16565b915050611301565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420726f6c65496400000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561139f5780601f106113745761010080835404028352916020019161139f565b820191906000526020600020905b81548152906001019060200180831161138257829003601f168201915b5050505050905090565b6113b161196a565b6113b96119ee565b6113cf600160028111156113c957fe5b8261104f565b6113d7611a0b565b50565b600061149d6113e7611a28565b846114988560405180606001604052806025815260200161294a6025913960016000611411611a28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b611a30565b6001905092915050565b60006114bb6114b4611a28565b8484611c27565b6001905092915050565b60006114cf61196a565b6114e5600160028111156114df57fe5b836111e0565b9050919050565b806002808111156114f957fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff16600281111561152857fe5b1461157e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612823602c913960400191505060405180910390fd5b8161158981336111e0565b6115de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061284f6022913960400191505060405180910390fd5b61160633600660008681526020019081526020016000206003016123bb90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af60405160405180910390a4505050565b6000816001600281111561167657fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff1660028111156116a557fe5b146116fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806127f4602f913960400191505060405180910390fd5b611719600660008581526020019081526020016000206002016125d0565b915050919050565b816001600281111561172f57fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff16600281111561175e57fe5b146117b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806127f4602f913960400191505060405180910390fd5b826117d56006600083815260200190815260200160002060000154336111e0565b61182a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129266024913960400191505060405180910390fd5b61185283600660008781526020019081526020016000206002016125fe90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74660405160405180910390a450505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61194261196a565b61194a6119ee565b61195f60028081111561195957fe5b8261104f565b611967611a0b565b50565b600760009054906101000a900460ff166119ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b565b6000600760006101000a81548160ff021916908315150217905550565b6001600760006101000a81548160ff021916908315150217905550565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ab6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129026024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127ac6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806128dd6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806127676023913960400191505060405180910390fd5b611d3e8383836126cb565b611da9816040518060600160405280602681526020016127ce602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e3c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fa890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611f95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f5a578082015181840152602081019050611f3f565b50505050905090810190601f168015611f875780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120df600083836126cb565b6120f481600254611fa890919063ffffffff16565b60028190555061214b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fa890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561227d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806128996021913960400191505060405180910390fd5b612289826000836126cb565b6122f48160405180606001604052806022815260200161278a602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061234b816002546126d090919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616e6e6f74206164642030783020746f20612073686172656420726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008173ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612684576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806128ba6023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b505050565b600061271283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ee8565b905092915050565b61272482826125fe565b5050565b60008090505b8151811015612761576127548383838151811061274757fe5b6020026020010151612419565b808060010191505061272e565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b6e048a115b5f9d3447b20c9c016663998da927c06b4e5ad510fd51313a747aa64736f6c63430006030033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520612073686172656420726f6c65",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c806373cc802a116100de578063a9059cbb11610097578063ab3545e511610071578063ab3545e5146108dd578063d97c05be1461094b578063dd62ed3e14610999578063f44637ba14610a115761018e565b8063a9059cbb146107ed578063aa271e1a14610853578063aaa14ca3146108af5761018e565b806373cc802a146105c857806374d0a6761461060c5780637cdc1cb91461065a57806395d89b41146106c0578063983b2d5614610743578063a457c2d7146107875761018e565b8063313ce5671161014b57806342966c681161012557806342966c68146104985780634334614a146104c65780636be7658b1461052257806370a08231146105705761018e565b8063313ce567146103a857806339509351146103cc57806340c10f19146104325761018e565b8063028468581461019357806306fdde03146101d7578063095ea7b31461025a57806318160ddd146102c057806323b872dd146102de5780633092afd514610364575b600080fd5b6101d5600480360360208110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a55565b005b6101df610a85565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021f578082015181840152602081019050610204565b50505050905090810190601f16801561024c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a66004803603604081101561027057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b27565b604051808215151515815260200191505060405180910390f35b6102c8610b45565b6040518082815260200191505060405180910390f35b61034a600480360360608110156102f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b4f565b604051808215151515815260200191505060405180910390f35b6103a66004803603602081101561037a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c28565b005b6103b0610c59565b604051808260ff1660ff16815260200191505060405180910390f35b610418600480360360408110156103e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c70565b604051808215151515815260200191505060405180910390f35b61047e6004803603604081101561044857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d23565b604051808215151515815260200191505060405180910390f35b6104c4600480360360208110156104ae57600080fd5b8101908080359060200190929190505050610da6565b005b610508600480360360208110156104dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1f565b604051808215151515815260200191505060405180910390f35b61056e6004803603604081101561053857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e45565b005b6105b26004803603602081101561058657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd6565b6040518082815260200191505060405180910390f35b61060a600480360360208110156105de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061101e565b005b6106586004803603604081101561062257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104f565b005b6106a66004803603604081101561067057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111e0565b604051808215151515815260200191505060405180910390f35b6106c8611307565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107856004803603602081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a9565b005b6107d36004803603604081101561079d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113da565b604051808215151515815260200191505060405180910390f35b6108396004803603604081101561080357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114a7565b604051808215151515815260200191505060405180910390f35b6108956004803603602081101561086957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114c5565b604051808215151515815260200191505060405180910390f35b6108db600480360360208110156108c557600080fd5b81019080803590602001909291905050506114ec565b005b610909600480360360208110156108f357600080fd5b8101908080359060200190929190505050611666565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109976004803603604081101561096157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611721565b005b6109fb600480360360408110156109af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118b3565b6040518082815260200191505060405180910390f35b610a5360048036036020811015610a2757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061193a565b005b610a5d61196a565b610a656119ee565b610a7a600280811115610a7457fe5b82610e45565b610a82611a0b565b50565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b1d5780601f10610af257610100808354040283529160200191610b1d565b820191906000526020600020905b815481529060010190602001808311610b0057829003601f168201915b5050505050905090565b6000610b3b610b34611a28565b8484611a30565b6001905092915050565b6000600254905090565b6000610b5c848484611c27565b610c1d84610b68611a28565b610c188560405180606001604052806028815260200161287160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bce611a28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b611a30565b600190509392505050565b610c3061196a565b610c386119ee565b610c4e60016002811115610c4857fe5b82610e45565b610c56611a0b565b50565b6000600560009054906101000a900460ff16905090565b6000610d19610c7d611a28565b84610d148560016000610c8e611a28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fa890919063ffffffff16565b611a30565b6001905092915050565b600060016002811115610d3257fe5b610d3c81336111e0565b610d91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061284f6022913960400191505060405180910390fd5b610d9b8484612030565b600191505092915050565b600280811115610db257fe5b610dbc81336111e0565b610e11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061284f6022913960400191505060405180910390fd5b610e1b33836121f7565b5050565b6000610e2961196a565b610e3e600280811115610e3857fe5b836111e0565b9050919050565b81600280811115610e5257fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff166002811115610e8157fe5b14610ed7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612823602c913960400191505060405180910390fd5b82610ef86006600083815260200190815260200160002060000154336111e0565b610f4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129266024913960400191505060405180910390fd5b610f7583600660008781526020019081526020016000206003016123bb90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af60405160405180910390a450505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61102661196a565b61102e6119ee565b6110446000600281111561103e57fe5b82611721565b61104c611a0b565b50565b8160028081111561105c57fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff16600281111561108b57fe5b146110e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612823602c913960400191505060405180910390fd5b826111026006600083815260200190815260200160002060000154336111e0565b611157576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129266024913960400191505060405180910390fd5b61117f836006600087815260200190815260200160002060030161241990919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f60405160405180910390a450505050565b6000806006600085815260200190815260200160002090506001600281111561120557fe5b8160010160009054906101000a900460ff16600281111561122257fe5b14156112465761123e838260020161251a90919063ffffffff16565b915050611301565b60028081111561125257fe5b8160010160009054906101000a900460ff16600281111561126f57fe5b14156112935761128b838260030161257790919063ffffffff16565b915050611301565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420726f6c65496400000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561139f5780601f106113745761010080835404028352916020019161139f565b820191906000526020600020905b81548152906001019060200180831161138257829003601f168201915b5050505050905090565b6113b161196a565b6113b96119ee565b6113cf600160028111156113c957fe5b8261104f565b6113d7611a0b565b50565b600061149d6113e7611a28565b846114988560405180606001604052806025815260200161294a6025913960016000611411611a28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b611a30565b6001905092915050565b60006114bb6114b4611a28565b8484611c27565b6001905092915050565b60006114cf61196a565b6114e5600160028111156114df57fe5b836111e0565b9050919050565b806002808111156114f957fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff16600281111561152857fe5b1461157e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612823602c913960400191505060405180910390fd5b8161158981336111e0565b6115de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061284f6022913960400191505060405180910390fd5b61160633600660008681526020019081526020016000206003016123bb90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af60405160405180910390a4505050565b6000816001600281111561167657fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff1660028111156116a557fe5b146116fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806127f4602f913960400191505060405180910390fd5b611719600660008581526020019081526020016000206002016125d0565b915050919050565b816001600281111561172f57fe5b6006600083815260200190815260200160002060010160009054906101000a900460ff16600281111561175e57fe5b146117b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806127f4602f913960400191505060405180910390fd5b826117d56006600083815260200190815260200160002060000154336111e0565b61182a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129266024913960400191505060405180910390fd5b61185283600660008781526020019081526020016000206002016125fe90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74660405160405180910390a450505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61194261196a565b61194a6119ee565b61195f60028081111561195957fe5b8261104f565b611967611a0b565b50565b600760009054906101000a900460ff166119ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b565b6000600760006101000a81548160ff021916908315150217905550565b6001600760006101000a81548160ff021916908315150217905550565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ab6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129026024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127ac6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806128dd6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806127676023913960400191505060405180910390fd5b611d3e8383836126cb565b611da9816040518060600160405280602681526020016127ce602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e3c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fa890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611f95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f5a578082015181840152602081019050611f3f565b50505050905090810190601f168015611f875780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120df600083836126cb565b6120f481600254611fa890919063ffffffff16565b60028190555061214b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fa890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561227d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806128996021913960400191505060405180910390fd5b612289826000836126cb565b6122f48160405180606001604052806022815260200161278a602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee89092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061234b816002546126d090919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616e6e6f74206164642030783020746f20612073686172656420726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008173ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612684576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806128ba6023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b505050565b600061271283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ee8565b905092915050565b61272482826125fe565b5050565b60008090505b8151811015612761576127548383838151811061274757fe5b6020026020010151612419565b808060010191505061272e565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b6e048a115b5f9d3447b20c9c016663998da927c06b4e5ad510fd51313a747aa64736f6c63430006030033",
    "sourceMap": "240:2795:18:-:0;;;583:192;5:9:-1;2:2;;;27:1;24;17:12;2:2;583:192:18;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;583:192:18;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;583:192:18;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;583:192:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;583:192:18;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;583:192:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:9;730:11;743:13;979:10:12;991:12;2077:4:11;2069:5;:12;;;;;;;;;;;;:::i;:::-;;2101:6;2091:7;:16;;;;;;;;;;;;:::i;:::-;;2129:2;2117:9;;:14;;;;;;;;;;;;;;;;;;1997:141;;1015:30:12::1;1030:14;1015;;;:30;;:::i;:::-;1055:76;1084:11;1076:20;;;;;;;;1106:11;1098:20;;;;;;;;1120:10;1055:20;;;:76;;:::i;:::-;1141:80;1167:12;1159:21;;;;;;;;1190:11;1182:20;;;;;;;;1218:1;1204:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;1204:16:12;;;;1141:17;;;:80;;:::i;:::-;1231;1257:12;1249:21:::0;::::1;;;;;;;1280:11;1272:20;;;;;;;;1308:1;1294:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;1294:16:12;;;;1231:17;;;:80;;:::i;:::-;848:470:::0;;;878:4:14;864:11;;:18;;;;;;;;;;;;;;;;;;1298:19:::1;:17;;;:19;;:::i;:::-;1327:17;:15;;;:17;;:::i;:::-;1365:20;:18;;;:20;;:::i;:::-;583:192:18::0;;;240:2795;;10006:88:11;10078:9;10066;;:21;;;;;;;;;;;;;;;;;;10006:88;:::o;8777:519:15:-;8925:6;7520:16;7494:42;;;;;;;;:5;:13;7500:6;7494:13;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;;;;;;;7486:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8943:17:::1;8963:5;:13;8969:6;8963:13;;;;;;;;;;;8943:33;;9002:18;8986:4;:13;;;:34;;;;;;;;;;;;;;;;;;;;;;;;9050:14;9030:4;:17;;:34;;;;9074:48;9108:13;9074:4;:28;;:33;;;;;;:48;;;;:::i;:::-;9187:16;9153:50;;;;;;;;:5;:21;9159:14;9153:21;;;;;;;;;;;:30;;;;;;;;;;;;:50;;;;;;;;;;9132:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:1;8777:519:::0;;;;:::o;7923:517::-;8078:6;7520:16;7494:42;;;;;;;;:5;:13;7500:6;7494:13;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;;;;;;;7486:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8096:17:::1;8116:5;:13;8122:6;8116:13;;;;;;;;;;;8096:33;;8155:15;8139:4;:13;;;:31;;;;;;;;;;;;;;;;;;;;;;;;8200:14;8180:4;:17;;:34;;;;8224:46;8255:14;8224:4;:25;;:30;;;;;;:46;;;;:::i;:::-;8335:16;8301:50;;;;;;;;:5;:21;8307:14;8301:21;;;;;;;;;;;:30;;;;;;;;;;;;:50;;;;;;;;;;8280:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:1;7923:517:::0;;;;:::o;2117:186:14:-;2249:11;;;;;;;;;;;2241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186::o;2309:136::-;2433:5;2419:11;;:19;;;;;;;;;;;;;;;;;;2309:136::o;2451:206::-;2646:4;2632:11;;:18;;;;;;;;;;;;;;;;;;2451:206::o;654:144:15:-;749:42;761:14;777:13;749:11;;;:42;;:::i;:::-;654:144;;:::o;1474:232::-;1584:9;1596:1;1584:13;;1579:121;1603:14;:21;1599:1;:25;1579:121;;;1645:44;1655:14;1671;1686:1;1671:17;;;;;;;;;;;;;;1645:9;;;:44;;:::i;:::-;1626:3;;;;;;;1579:121;;;;1474:232;;:::o;286:221::-;413:3;392:25;;:9;:25;;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:9;467:14;:21;;;:33;;;;;;;;;;;;;;;;;;286:221;;:::o;1077:228::-;1206:3;1183:27;;:11;:27;;;;1175:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1294:4;1256:14;:22;;:35;1279:11;1256:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1077:228;;:::o;240:2795:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "deployedSourceMap": "240:2795:18:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;240:2795:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1886:124:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1886:124:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;2203:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2203:81:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4239:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4239:166:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3246:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4865:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4865:317:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1268:124:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1268:124:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;3105:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5577:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5577:215:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:216:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1559:216:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1899:126;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1899:126:12;;;;;;;;;;;;;;;;;:::i;:::-;;2887:146:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2887:146:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6365:262:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6365:262:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3402:117:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3402:117:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2181:120:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2181:120:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;5751:239:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5751:239:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3906:428;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3906:428:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2397:85:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2397:85:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:118:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;958:118:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;6279:266:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6279:266:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3722:172;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3722:172:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2521:146:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2521:146:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6894:235:15;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6894:235:15;;;;;;;;;;;;;;;;;:::i;:::-;;5245:160;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5245:160:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4692:252;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4692:252:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3952:149:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3952:149:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1575:118:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1575:118:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;1886:124;1298:19:14;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1959:44:18::1;1980:12;1972:21:::0;::::1;;;;;;;1995:7;1959:12;:44::i;:::-;1365:20:14::0;:18;:20::i;:::-;1886:124:18;:::o;2203:81:11:-;2240:13;2272:5;2265:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:81;:::o;4239:166::-;4322:4;4338:39;4347:12;:10;:12::i;:::-;4361:7;4370:6;4338:8;:39::i;:::-;4394:4;4387:11;;4239:166;;;;:::o;3246:98::-;3299:7;3325:12;;3318:19;;3246:98;:::o;4865:317::-;4971:4;4987:36;4997:6;5005:9;5016:6;4987:9;:36::i;:::-;5033:121;5042:6;5050:12;:10;:12::i;:::-;5064:89;5102:6;5064:89;;;;;;;;;;;;;;;;;:11;:19;5076:6;5064:19;;;;;;;;;;;;;;;:33;5084:12;:10;:12::i;:::-;5064:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5033:8;:121::i;:::-;5171:4;5164:11;;4865:317;;;;;:::o;1268:124:18:-;1298:19:14;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1341:44:18::1;1362:12;1354:21;;;;;;;;1377:7;1341:12;:44::i;:::-;1365:20:14::0;:18;:20::i;:::-;1268:124:18;:::o;3105:81:11:-;3146:5;3170:9;;;;;;;;;;;3163:16;;3105:81;:::o;5577:215::-;5665:4;5681:83;5690:12;:10;:12::i;:::-;5704:7;5713:50;5752:10;5713:11;:25;5725:12;:10;:12::i;:::-;5713:25;;;;;;;;;;;;;;;:34;5739:7;5713:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5681:8;:83::i;:::-;5781:4;5774:11;;5577:215;;;;:::o;1559:216:12:-;1704:4;1672:12;1664:21;;;;;;;;2674:29:15;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1724:23:12::1;1730:9;1741:5;1724;:23::i;:::-;1764:4;1757:11;;1559:216:::0;;;;;:::o;1899:126::-;1969:12;1961:21;;;;;;;;2674:29:15;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:24:12::1;2000:10;2012:5;1994;:24::i;:::-;1899:126:::0;;:::o;2887:146:18:-;2962:4;1584:19:14;:17;:19::i;:::-;2985:41:18::1;3003:12;2995:21:::0;::::1;;;;;;;3018:7;2985:9;:41::i;:::-;2978:48;;2887:146:::0;;;:::o;6365:262:15:-;6445:6;3512:15;3486:41;;;;;;;;:5;:13;3492:6;3486:13;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6469:6:::1;2940:49;2950:5;:13;2956:6;2950:13;;;;;;;;;;;:26;;;2978:10;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6487:63:::2;6535:14;6487:5;:13;6493:6;6487:13;;;;;;;;;;;:34;;:47;;:63;;;;:::i;:::-;6609:10;6565:55;;6593:14;6565:55;;6585:6;6565:55;;;;;;;;;;3586:1:::1;6365:262:::0;;;:::o;3402:117:11:-;3468:7;3494:9;:18;3504:7;3494:18;;;;;;;;;;;;;;;;3487:25;;3402:117;;;:::o;2181:120:18:-;1298:19:14;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;2252:42:18::1;2272:11;2264:20;;;;;;;;2286:7;2252:11;:42::i;:::-;1365:20:14::0;:18;:20::i;:::-;2181:120:18;:::o;5751:239:15:-;5823:6;3512:15;3486:41;;;;;;;;:5;:13;3492:6;3486:13;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5847:6:::1;2940:49;2950:5;:13;2956:6;2950:13;;;;;;;;;;;:26;;;2978:10;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5865:55:::2;5910:9;5865:5;:13;5871:6;5865:13;;;;;;;;;;;:34;;:44;;:55;;;;:::i;:::-;5972:10;5935:48;;5961:9;5935:48;;5953:6;5935:48;;;;;;;;;;3586:1:::1;5751:239:::0;;;:::o;3906:428::-;3985:4;4001:17;4021:5;:13;4027:6;4021:13;;;;;;;;;;;4001:33;;4065:18;4048:35;;;;;;;;:4;:13;;;;;;;;;;;;:35;;;;;;;;;4044:250;;;4106:52;4144:13;4106:4;:28;;:37;;:52;;;;:::i;:::-;4099:59;;;;;4044:250;4196:15;4179:32;;;;;;;;:4;:13;;;;;;;;;;;;:32;;;;;;;;;4175:119;;;4234:49;4269:13;4234:4;:25;;:34;;:49;;;;:::i;:::-;4227:56;;;;;4175:119;4303:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3906:428;;;;;:::o;2397:85:11:-;2436:13;2468:7;2461:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2397:85;:::o;958:118:18:-;1298:19:14;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1028:41:18::1;1046:12;1038:21;;;;;;;;1061:7;1028:9;:41::i;:::-;1365:20:14::0;:18;:20::i;:::-;958:118:18;:::o;6279:266:11:-;6372:4;6388:129;6397:12;:10;:12::i;:::-;6411:7;6420:96;6459:15;6420:96;;;;;;;;;;;;;;;;;:11;:25;6432:12;:10;:12::i;:::-;6420:25;;;;;;;;;;;;;;;:34;6446:7;6420:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6388:8;:129::i;:::-;6534:4;6527:11;;6279:266;;;;:::o;3722:172::-;3808:4;3824:42;3834:12;:10;:12::i;:::-;3848:9;3859:6;3824:9;:42::i;:::-;3883:4;3876:11;;3722:172;;;;:::o;2521:146:18:-;2596:4;1584:19:14;:17;:19::i;:::-;2619:41:18::1;2637:12;2629:21;;;;;;;;2652:7;2619:9;:41::i;:::-;2612:48;;2521:146:::0;;;:::o;6894:235:15:-;6956:6;3512:15;3486:41;;;;;;;;:5;:13;3492:6;3486:13;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3478:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6979:6:::1;2674:29;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:59:::2;7045:10;6997:5;:13;7003:6;6997:13;;;;;;;;;;;:34;;:47;;:59;;;;:::i;:::-;7111:10;7071:51;;7099:10;7071:51;;7091:6;7071:51;;;;;;;;;;3586:1:::1;6894:235:::0;;:::o;5245:160::-;5323:7;5306:6;3239:18;3213:44;;;;;;;;:5;:13;3219:6;3213:13;;;;;;;;;;;:22;;;;;;;;;;;;:44;;;;;;;;;3205:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5349:49:::1;:5;:13;5355:6;5349:13;;;;;;;;;;;:37;;:47;:49::i;:::-;5342:56;;5245:160:::0;;;;:::o;4692:252::-;4769:6;3239:18;3213:44;;;;;;;;:5;:13;3219:6;3213:13;;;;;;;;;;;:22;;;;;;;;;;;;:44;;;;;;;;;3205:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4793:6:::1;2940:49;2950:5;:13;2956:6;2950:13;;;;;;;;;;;:26;;;2978:10;2940:9;:49::i;:::-;2932:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:60:::2;4861:9;4811:5;:13;4817:6;4811:13;;;;;;;;;;;:37;;:49;;:60;;;;:::i;:::-;4926:10;4886:51;;4915:9;4886:51;;4907:6;4886:51;;;;;;;;;;3319:1:::1;4692:252:::0;;;:::o;3952:149:11:-;4041:7;4067:11;:18;4079:5;4067:18;;;;;;;;;;;;;;;:27;4086:7;4067:27;;;;;;;;;;;;;;;;4060:34;;3952:149;;;;:::o;1575:118:18:-;1298:19:14;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1645:41:18::1;1663:12;1655:21:::0;::::1;;;;;;;1678:7;1645:9;:41::i;:::-;1365:20:14::0;:18;:20::i;:::-;1575:118:18;:::o;2117:186:14:-;2249:11;;;;;;;;;;;2241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186::o;2309:136::-;2433:5;2419:11;;:19;;;;;;;;;;;;;;;;;;2309:136::o;2451:206::-;2646:4;2632:11;;:18;;;;;;;;;;;;;;;;;;2451:206::o;735:104:0:-;788:15;822:10;815:17;;735:104;:::o;9343:340:11:-;9461:1;9444:19;;:5;:19;;;;9436:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9541:1;9522:21;;:7;:21;;;;9514:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9623:6;9593:11;:18;9605:5;9593:18;;;;;;;;;;;;;;;:27;9612:7;9593:27;;;;;;;;;;;;;;;:36;;;;9660:7;9644:32;;9653:5;9644:32;;;9669:6;9644:32;;;;;;;;;;;;;;;;;;9343:340;;;:::o;7019:530::-;7142:1;7124:20;;:6;:20;;;;7116:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7225:1;7204:23;;:9;:23;;;;7196:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7278:47;7299:6;7307:9;7318:6;7278:20;:47::i;:::-;7356:71;7378:6;7356:71;;;;;;;;;;;;;;;;;:9;:17;7366:6;7356:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7336:9;:17;7346:6;7336:17;;;;;;;;;;;;;;;:91;;;;7460:32;7485:6;7460:9;:20;7470:9;7460:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7437:9;:20;7447:9;7437:20;;;;;;;;;;;;;;;:55;;;;7524:9;7507:35;;7516:6;7507:35;;;7535:6;7507:35;;;;;;;;;;;;;;;;;;7019:530;;;:::o;1732:187:17:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;7819:370:11:-;7921:1;7902:21;;:7;:21;;;;7894:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7970:49;7999:1;8003:7;8012:6;7970:20;:49::i;:::-;8045:24;8062:6;8045:12;;:16;;:24;;;;:::i;:::-;8030:12;:39;;;;8100:30;8123:6;8100:9;:18;8110:7;8100:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8079:9;:18;8089:7;8079:18;;;;;;;;;;;;;;;:51;;;;8166:7;8145:37;;8162:1;8145:37;;;8175:6;8145:37;;;;;;;;;;;;;;;;;;7819:370;;:::o;8508:410::-;8610:1;8591:21;;:7;:21;;;;8583:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8661:49;8682:7;8699:1;8703:6;8661:20;:49::i;:::-;8742:68;8765:6;8742:68;;;;;;;;;;;;;;;;;:9;:18;8752:7;8742:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8721:9;:18;8731:7;8721:18;;;;;;;;;;;;;;;:89;;;;8835:24;8852:6;8835:12;;:16;;:24;;;;:::i;:::-;8820:12;:39;;;;8900:1;8874:37;;8883:7;8874:37;;;8904:6;8874:37;;;;;;;;;;;;;;;;;;8508:410;;:::o;1311:157:15:-;1456:5;1415:14;:22;;:38;1438:14;1415:38;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;1311:157;;:::o;1077:228::-;1206:3;1183:27;;:11;:27;;;;1175:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1294:4;1256:14;:22;;:35;1279:11;1256:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1077:228;;:::o;109:171::-;212:4;260:13;235:38;;:14;:21;;;;;;;;;;;;:38;;;228:45;;109:171;;;;:::o;901:170::-;1004:4;1027:14;:22;;:37;1050:13;1027:37;;;;;;;;;;;;;;;;;;;;;;;;;1020:44;;901:170;;;;:::o;513:135::-;594:7;620:14;:21;;;;;;;;;;;;613:28;;513:135;;;:::o;286:221::-;413:3;392:25;;:9;:25;;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:9;467:14;:21;;;:33;;;;;;;;;;;;;;;;;;286:221;;:::o;10681:92:11:-;;;;:::o;1274:134:17:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;654:144:15:-;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o;1474:232::-;1584:9;1596:1;1584:13;;1579:121;1603:14;:21;1599:1;:25;1579:121;;;1645:44;1655:14;1671;1686:1;1671:17;;;;;;;;;;;;;;1645:9;:44::i;:::-;1626:3;;;;;;;1579:121;;;;1474:232;;:::o",
    "source": "pragma solidity ^0.6.0;\nimport \"./ExpandedERC20.sol\";\nimport \"./Lockable.sol\";\n\n\n/**\n * @title Burnable and mintable ERC20.\n * @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\n */\n\ncontract SyntheticToken is ExpandedERC20, Lockable {\n    /**\n     * @notice Constructs the SyntheticToken.\n     * @param tokenName The name which describes the new token.\n     * @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n     * @param tokenDecimals The number of decimals to define token precision.\n     */\n    constructor(\n        string memory tokenName,\n        string memory tokenSymbol,\n        uint8 tokenDecimals\n    ) public ExpandedERC20(tokenName, tokenSymbol, tokenDecimals) nonReentrant() {}\n\n    /**\n     * @notice Add Minter role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Minter role is added.\n     */\n    function addMinter(address account) external nonReentrant() {\n        addMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Remove Minter role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Minter role is removed.\n     */\n    function removeMinter(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Add Burner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Burner role is added.\n     */\n    function addBurner(address account) external nonReentrant() {\n        addMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Removes Burner role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Burner role is removed.\n     */\n    function removeBurner(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Reset Owner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The new holder of the Owner role.\n     */\n    function resetOwner(address account) external nonReentrant() {\n        resetMember(uint256(Roles.Owner), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Minter role.\n     * @param account The address which is checked for the Minter role.\n     * @return bool True if the provided account is a Minter.\n     */\n    function isMinter(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Burner role.\n     * @param account The address which is checked for the Burner role.\n     * @return bool True if the provided account is a Burner.\n     */\n    function isBurner(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Burner), account);\n    }\n}\n",
    "sourcePath": "/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/SyntheticToken.sol",
    "ast": {
      "absolutePath": "/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/SyntheticToken.sol",
      "exportedSymbols": {
        "SyntheticToken": [
          3299
        ]
      },
      "id": 3300,
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 3143,
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "0:23:18"
        },
        {
          "absolutePath": "/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/ExpandedERC20.sol",
          "file": "./ExpandedERC20.sol",
          "id": 3144,
          "nodeType": "ImportDirective",
          "scope": 3300,
          "sourceUnit": 1445,
          "src": "24:29:18",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/Lockable.sol",
          "file": "./Lockable.sol",
          "id": 3145,
          "nodeType": "ImportDirective",
          "scope": 3300,
          "sourceUnit": 2208,
          "src": "54:24:18",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 3147,
                "name": "ExpandedERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1444,
                "src": "267:13:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedERC20_$1444",
                  "typeString": "contract ExpandedERC20"
                }
              },
              "id": 3148,
              "nodeType": "InheritanceSpecifier",
              "src": "267:13:18"
            },
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 3149,
                "name": "Lockable",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2207,
                "src": "282:8:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Lockable_$2207",
                  "typeString": "contract Lockable"
                }
              },
              "id": 3150,
              "nodeType": "InheritanceSpecifier",
              "src": "282:8:18"
            }
          ],
          "contractDependencies": [
            26,
            676,
            699,
            1310,
            1444,
            2207,
            2815
          ],
          "contractKind": "contract",
          "documentation": {
            "id": 3146,
            "nodeType": "StructuredDocumentation",
            "src": "81:157:18",
            "text": "@title Burnable and mintable ERC20.\n@dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
          },
          "fullyImplemented": true,
          "id": 3299,
          "linearizedBaseContracts": [
            3299,
            2207,
            1444,
            2815,
            1310,
            699,
            676,
            26
          ],
          "name": "SyntheticToken",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "body": {
                "id": 3167,
                "nodeType": "Block",
                "src": "773:2:18",
                "statements": []
              },
              "documentation": {
                "id": 3151,
                "nodeType": "StructuredDocumentation",
                "src": "297:281:18",
                "text": "@notice Constructs the SyntheticToken.\n@param tokenName The name which describes the new token.\n@param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n@param tokenDecimals The number of decimals to define token precision."
              },
              "id": 3168,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [
                {
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "id": 3160,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3153,
                      "src": "719:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    {
                      "argumentTypes": null,
                      "id": 3161,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3155,
                      "src": "730:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    {
                      "argumentTypes": null,
                      "id": 3162,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3157,
                      "src": "743:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    }
                  ],
                  "id": 3163,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3159,
                    "name": "ExpandedERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1444,
                    "src": "705:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$1444_$",
                      "typeString": "type(contract ExpandedERC20)"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "705:52:18"
                },
                {
                  "arguments": [],
                  "id": 3165,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3164,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "758:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "758:14:18"
                }
              ],
              "name": "",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3158,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3153,
                    "name": "tokenName",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3168,
                    "src": "604:23:18",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3152,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "604:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3155,
                    "name": "tokenSymbol",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3168,
                    "src": "637:25:18",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3154,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "637:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3157,
                    "name": "tokenDecimals",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3168,
                    "src": "672:19:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 3156,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "672:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "594:103:18"
              },
              "returnParameters": {
                "id": 3166,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "773:0:18"
              },
              "scope": 3299,
              "src": "583:192:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3185,
                "nodeType": "Block",
                "src": "1018:58:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3179,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1046:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Minter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1046:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1038:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3177,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1038:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1038:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3182,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3171,
                          "src": "1061:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3176,
                        "name": "addMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "1028:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1028:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3184,
                    "nodeType": "ExpressionStatement",
                    "src": "1028:41:18"
                  }
                ]
              },
              "documentation": {
                "id": 3169,
                "nodeType": "StructuredDocumentation",
                "src": "781:172:18",
                "text": "@notice Add Minter role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Minter role is added."
              },
              "functionSelector": "983b2d56",
              "id": 3186,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3174,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3173,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1003:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1003:14:18"
                }
              ],
              "name": "addMinter",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3172,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3171,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3186,
                    "src": "977:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3170,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "977:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "976:17:18"
              },
              "returnParameters": {
                "id": 3175,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1018:0:18"
              },
              "scope": 3299,
              "src": "958:118:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3203,
                "nodeType": "Block",
                "src": "1331:61:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3197,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1362:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Minter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1362:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1354:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3195,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1354:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1354:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3200,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3189,
                          "src": "1377:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3194,
                        "name": "removeMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "1341:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1341:44:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3202,
                    "nodeType": "ExpressionStatement",
                    "src": "1341:44:18"
                  }
                ]
              },
              "documentation": {
                "id": 3187,
                "nodeType": "StructuredDocumentation",
                "src": "1082:181:18",
                "text": "@notice Remove Minter role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Minter role is removed."
              },
              "functionSelector": "3092afd5",
              "id": 3204,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3192,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3191,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1316:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1316:14:18"
                }
              ],
              "name": "removeMinter",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3190,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3189,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3204,
                    "src": "1290:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3188,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1290:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1289:17:18"
              },
              "returnParameters": {
                "id": 3193,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1331:0:18"
              },
              "scope": 3299,
              "src": "1268:124:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3221,
                "nodeType": "Block",
                "src": "1635:58:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3215,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1663:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Burner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1663:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1655:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1655:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1655:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3218,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3207,
                          "src": "1678:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3212,
                        "name": "addMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "1645:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1645:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3220,
                    "nodeType": "ExpressionStatement",
                    "src": "1645:41:18"
                  }
                ]
              },
              "documentation": {
                "id": 3205,
                "nodeType": "StructuredDocumentation",
                "src": "1398:172:18",
                "text": "@notice Add Burner role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Burner role is added."
              },
              "functionSelector": "f44637ba",
              "id": 3222,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3210,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3209,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1620:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1620:14:18"
                }
              ],
              "name": "addBurner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3208,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3207,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3222,
                    "src": "1594:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3206,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1594:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1593:17:18"
              },
              "returnParameters": {
                "id": 3211,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1635:0:18"
              },
              "scope": 3299,
              "src": "1575:118:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3239,
                "nodeType": "Block",
                "src": "1949:61:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3233,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1980:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Burner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1980:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1972:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3231,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1972:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1972:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3236,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3225,
                          "src": "1995:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3230,
                        "name": "removeMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "1959:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1959:44:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3238,
                    "nodeType": "ExpressionStatement",
                    "src": "1959:44:18"
                  }
                ]
              },
              "documentation": {
                "id": 3223,
                "nodeType": "StructuredDocumentation",
                "src": "1699:182:18",
                "text": "@notice Removes Burner role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Burner role is removed."
              },
              "functionSelector": "02846858",
              "id": 3240,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3228,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3227,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1934:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1934:14:18"
                }
              ],
              "name": "removeBurner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3226,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3225,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3240,
                    "src": "1908:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3224,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1908:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1907:17:18"
              },
              "returnParameters": {
                "id": 3229,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1949:0:18"
              },
              "scope": 3299,
              "src": "1886:124:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3257,
                "nodeType": "Block",
                "src": "2242:59:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3251,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "2272:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2272:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2264:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3249,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2264:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2264:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3254,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3243,
                          "src": "2286:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3248,
                        "name": "resetMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "2252:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2252:42:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3256,
                    "nodeType": "ExpressionStatement",
                    "src": "2252:42:18"
                  }
                ]
              },
              "documentation": {
                "id": 3241,
                "nodeType": "StructuredDocumentation",
                "src": "2016:160:18",
                "text": "@notice Reset Owner role to account.\n@dev The caller must have the Owner role.\n@param account The new holder of the Owner role."
              },
              "functionSelector": "73cc802a",
              "id": 3258,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3246,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3245,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "2227:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2227:14:18"
                }
              ],
              "name": "resetOwner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3244,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3243,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3258,
                    "src": "2201:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3242,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2201:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2200:17:18"
              },
              "returnParameters": {
                "id": 3247,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2242:0:18"
              },
              "scope": 3299,
              "src": "2181:120:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3277,
                "nodeType": "Block",
                "src": "2602:65:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3271,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "2637:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Minter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2637:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2629:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3269,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2629:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2629:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3274,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3261,
                          "src": "2652:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3268,
                        "name": "holdsRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "2619:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint256,address) view returns (bool)"
                        }
                      },
                      "id": 3275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2619:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "functionReturnParameters": 3267,
                    "id": 3276,
                    "nodeType": "Return",
                    "src": "2612:48:18"
                  }
                ]
              },
              "documentation": {
                "id": 3259,
                "nodeType": "StructuredDocumentation",
                "src": "2307:209:18",
                "text": "@notice Checks if a given account holds the Minter role.\n@param account The address which is checked for the Minter role.\n@return bool True if the provided account is a Minter."
              },
              "functionSelector": "aa271e1a",
              "id": 3278,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3264,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3263,
                    "name": "nonReentrantView",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "2568:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2568:18:18"
                }
              ],
              "name": "isMinter",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3262,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3261,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3278,
                    "src": "2539:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3260,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2539:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2538:17:18"
              },
              "returnParameters": {
                "id": 3267,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3266,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3278,
                    "src": "2596:4:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 3265,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2596:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2595:6:18"
              },
              "scope": 3299,
              "src": "2521:146:18",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3297,
                "nodeType": "Block",
                "src": "2968:65:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3291,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "3003:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Burner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3003:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2995:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3289,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2995:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2995:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3294,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3281,
                          "src": "3018:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3288,
                        "name": "holdsRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "2985:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint256,address) view returns (bool)"
                        }
                      },
                      "id": 3295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2985:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "functionReturnParameters": 3287,
                    "id": 3296,
                    "nodeType": "Return",
                    "src": "2978:48:18"
                  }
                ]
              },
              "documentation": {
                "id": 3279,
                "nodeType": "StructuredDocumentation",
                "src": "2673:209:18",
                "text": "@notice Checks if a given account holds the Burner role.\n@param account The address which is checked for the Burner role.\n@return bool True if the provided account is a Burner."
              },
              "functionSelector": "4334614a",
              "id": 3298,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3284,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3283,
                    "name": "nonReentrantView",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "2934:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2934:18:18"
                }
              ],
              "name": "isBurner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3282,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3281,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3298,
                    "src": "2905:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3280,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2905:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2904:17:18"
              },
              "returnParameters": {
                "id": 3287,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3286,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3298,
                    "src": "2962:4:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 3285,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2962:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2961:6:18"
              },
              "scope": 3299,
              "src": "2887:146:18",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            }
          ],
          "scope": 3300,
          "src": "240:2795:18"
        }
      ],
      "src": "0:3036:18"
    },
    "legacyAST": {
      "absolutePath": "/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/SyntheticToken.sol",
      "exportedSymbols": {
        "SyntheticToken": [
          3299
        ]
      },
      "id": 3300,
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 3143,
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "0:23:18"
        },
        {
          "absolutePath": "/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/ExpandedERC20.sol",
          "file": "./ExpandedERC20.sol",
          "id": 3144,
          "nodeType": "ImportDirective",
          "scope": 3300,
          "sourceUnit": 1445,
          "src": "24:29:18",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "/home/pisuthd/Desktop/textsonic/bai-stablecoin/contracts/utility/Lockable.sol",
          "file": "./Lockable.sol",
          "id": 3145,
          "nodeType": "ImportDirective",
          "scope": 3300,
          "sourceUnit": 2208,
          "src": "54:24:18",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 3147,
                "name": "ExpandedERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1444,
                "src": "267:13:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ExpandedERC20_$1444",
                  "typeString": "contract ExpandedERC20"
                }
              },
              "id": 3148,
              "nodeType": "InheritanceSpecifier",
              "src": "267:13:18"
            },
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 3149,
                "name": "Lockable",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2207,
                "src": "282:8:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Lockable_$2207",
                  "typeString": "contract Lockable"
                }
              },
              "id": 3150,
              "nodeType": "InheritanceSpecifier",
              "src": "282:8:18"
            }
          ],
          "contractDependencies": [
            26,
            676,
            699,
            1310,
            1444,
            2207,
            2815
          ],
          "contractKind": "contract",
          "documentation": {
            "id": 3146,
            "nodeType": "StructuredDocumentation",
            "src": "81:157:18",
            "text": "@title Burnable and mintable ERC20.\n@dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
          },
          "fullyImplemented": true,
          "id": 3299,
          "linearizedBaseContracts": [
            3299,
            2207,
            1444,
            2815,
            1310,
            699,
            676,
            26
          ],
          "name": "SyntheticToken",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "body": {
                "id": 3167,
                "nodeType": "Block",
                "src": "773:2:18",
                "statements": []
              },
              "documentation": {
                "id": 3151,
                "nodeType": "StructuredDocumentation",
                "src": "297:281:18",
                "text": "@notice Constructs the SyntheticToken.\n@param tokenName The name which describes the new token.\n@param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n@param tokenDecimals The number of decimals to define token precision."
              },
              "id": 3168,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [
                {
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "id": 3160,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3153,
                      "src": "719:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    {
                      "argumentTypes": null,
                      "id": 3161,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3155,
                      "src": "730:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    {
                      "argumentTypes": null,
                      "id": 3162,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3157,
                      "src": "743:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    }
                  ],
                  "id": 3163,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3159,
                    "name": "ExpandedERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1444,
                    "src": "705:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$1444_$",
                      "typeString": "type(contract ExpandedERC20)"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "705:52:18"
                },
                {
                  "arguments": [],
                  "id": 3165,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3164,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "758:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "758:14:18"
                }
              ],
              "name": "",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3158,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3153,
                    "name": "tokenName",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3168,
                    "src": "604:23:18",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3152,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "604:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3155,
                    "name": "tokenSymbol",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3168,
                    "src": "637:25:18",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 3154,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "637:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3157,
                    "name": "tokenDecimals",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3168,
                    "src": "672:19:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 3156,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "672:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "594:103:18"
              },
              "returnParameters": {
                "id": 3166,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "773:0:18"
              },
              "scope": 3299,
              "src": "583:192:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3185,
                "nodeType": "Block",
                "src": "1018:58:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3179,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1046:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Minter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1046:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1038:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3177,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1038:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1038:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3182,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3171,
                          "src": "1061:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3176,
                        "name": "addMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "1028:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1028:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3184,
                    "nodeType": "ExpressionStatement",
                    "src": "1028:41:18"
                  }
                ]
              },
              "documentation": {
                "id": 3169,
                "nodeType": "StructuredDocumentation",
                "src": "781:172:18",
                "text": "@notice Add Minter role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Minter role is added."
              },
              "functionSelector": "983b2d56",
              "id": 3186,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3174,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3173,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1003:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1003:14:18"
                }
              ],
              "name": "addMinter",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3172,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3171,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3186,
                    "src": "977:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3170,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "977:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "976:17:18"
              },
              "returnParameters": {
                "id": 3175,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1018:0:18"
              },
              "scope": 3299,
              "src": "958:118:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3203,
                "nodeType": "Block",
                "src": "1331:61:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3197,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1362:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Minter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1362:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1354:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3195,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1354:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1354:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3200,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3189,
                          "src": "1377:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3194,
                        "name": "removeMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "1341:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1341:44:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3202,
                    "nodeType": "ExpressionStatement",
                    "src": "1341:44:18"
                  }
                ]
              },
              "documentation": {
                "id": 3187,
                "nodeType": "StructuredDocumentation",
                "src": "1082:181:18",
                "text": "@notice Remove Minter role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Minter role is removed."
              },
              "functionSelector": "3092afd5",
              "id": 3204,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3192,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3191,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1316:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1316:14:18"
                }
              ],
              "name": "removeMinter",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3190,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3189,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3204,
                    "src": "1290:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3188,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1290:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1289:17:18"
              },
              "returnParameters": {
                "id": 3193,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1331:0:18"
              },
              "scope": 3299,
              "src": "1268:124:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3221,
                "nodeType": "Block",
                "src": "1635:58:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3215,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1663:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Burner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1663:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1655:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1655:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1655:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3218,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3207,
                          "src": "1678:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3212,
                        "name": "addMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "1645:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1645:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3220,
                    "nodeType": "ExpressionStatement",
                    "src": "1645:41:18"
                  }
                ]
              },
              "documentation": {
                "id": 3205,
                "nodeType": "StructuredDocumentation",
                "src": "1398:172:18",
                "text": "@notice Add Burner role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Burner role is added."
              },
              "functionSelector": "f44637ba",
              "id": 3222,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3210,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3209,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1620:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1620:14:18"
                }
              ],
              "name": "addBurner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3208,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3207,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3222,
                    "src": "1594:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3206,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1594:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1593:17:18"
              },
              "returnParameters": {
                "id": 3211,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1635:0:18"
              },
              "scope": 3299,
              "src": "1575:118:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3239,
                "nodeType": "Block",
                "src": "1949:61:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3233,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "1980:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Burner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1980:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1972:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3231,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1972:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1972:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3236,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3225,
                          "src": "1995:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3230,
                        "name": "removeMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "1959:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1959:44:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3238,
                    "nodeType": "ExpressionStatement",
                    "src": "1959:44:18"
                  }
                ]
              },
              "documentation": {
                "id": 3223,
                "nodeType": "StructuredDocumentation",
                "src": "1699:182:18",
                "text": "@notice Removes Burner role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Burner role is removed."
              },
              "functionSelector": "02846858",
              "id": 3240,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3228,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3227,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "1934:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1934:14:18"
                }
              ],
              "name": "removeBurner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3226,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3225,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3240,
                    "src": "1908:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3224,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1908:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1907:17:18"
              },
              "returnParameters": {
                "id": 3229,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1949:0:18"
              },
              "scope": 3299,
              "src": "1886:124:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3257,
                "nodeType": "Block",
                "src": "2242:59:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3251,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "2272:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2272:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2264:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3249,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2264:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2264:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3254,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3243,
                          "src": "2286:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3248,
                        "name": "resetMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "2252:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                          "typeString": "function (uint256,address)"
                        }
                      },
                      "id": 3255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2252:42:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3256,
                    "nodeType": "ExpressionStatement",
                    "src": "2252:42:18"
                  }
                ]
              },
              "documentation": {
                "id": 3241,
                "nodeType": "StructuredDocumentation",
                "src": "2016:160:18",
                "text": "@notice Reset Owner role to account.\n@dev The caller must have the Owner role.\n@param account The new holder of the Owner role."
              },
              "functionSelector": "73cc802a",
              "id": 3258,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3246,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3245,
                    "name": "nonReentrant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2173,
                    "src": "2227:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2227:14:18"
                }
              ],
              "name": "resetOwner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3244,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3243,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3258,
                    "src": "2201:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3242,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2201:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2200:17:18"
              },
              "returnParameters": {
                "id": 3247,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2242:0:18"
              },
              "scope": 3299,
              "src": "2181:120:18",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 3277,
                "nodeType": "Block",
                "src": "2602:65:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3271,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "2637:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Minter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2637:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2629:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3269,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2629:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2629:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3274,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3261,
                          "src": "2652:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3268,
                        "name": "holdsRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "2619:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint256,address) view returns (bool)"
                        }
                      },
                      "id": 3275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2619:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "functionReturnParameters": 3267,
                    "id": 3276,
                    "nodeType": "Return",
                    "src": "2612:48:18"
                  }
                ]
              },
              "documentation": {
                "id": 3259,
                "nodeType": "StructuredDocumentation",
                "src": "2307:209:18",
                "text": "@notice Checks if a given account holds the Minter role.\n@param account The address which is checked for the Minter role.\n@return bool True if the provided account is a Minter."
              },
              "functionSelector": "aa271e1a",
              "id": 3278,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3264,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3263,
                    "name": "nonReentrantView",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "2568:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2568:18:18"
                }
              ],
              "name": "isMinter",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3262,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3261,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3278,
                    "src": "2539:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3260,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2539:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2538:17:18"
              },
              "returnParameters": {
                "id": 3267,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3266,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3278,
                    "src": "2596:4:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 3265,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2596:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2595:6:18"
              },
              "scope": 3299,
              "src": "2521:146:18",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 3297,
                "nodeType": "Block",
                "src": "2968:65:18",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3291,
                                "name": "Roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "3003:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Roles_$1326_$",
                                  "typeString": "type(enum ExpandedERC20.Roles)"
                                }
                              },
                              "id": 3292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Burner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3003:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Roles_$1326",
                                "typeString": "enum ExpandedERC20.Roles"
                              }
                            ],
                            "id": 3290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2995:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3289,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2995:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2995:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3294,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3281,
                          "src": "3018:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3288,
                        "name": "holdsRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "2985:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint256,address) view returns (bool)"
                        }
                      },
                      "id": 3295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2985:41:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "functionReturnParameters": 3287,
                    "id": 3296,
                    "nodeType": "Return",
                    "src": "2978:48:18"
                  }
                ]
              },
              "documentation": {
                "id": 3279,
                "nodeType": "StructuredDocumentation",
                "src": "2673:209:18",
                "text": "@notice Checks if a given account holds the Burner role.\n@param account The address which is checked for the Burner role.\n@return bool True if the provided account is a Burner."
              },
              "functionSelector": "4334614a",
              "id": 3298,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "arguments": [],
                  "id": 3284,
                  "modifierName": {
                    "argumentTypes": null,
                    "id": 3283,
                    "name": "nonReentrantView",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "2934:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_modifier$__$",
                      "typeString": "modifier ()"
                    }
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2934:18:18"
                }
              ],
              "name": "isBurner",
              "nodeType": "FunctionDefinition",
              "overrides": null,
              "parameters": {
                "id": 3282,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3281,
                    "name": "account",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3298,
                    "src": "2905:15:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3280,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2905:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2904:17:18"
              },
              "returnParameters": {
                "id": 3287,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3286,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 3298,
                    "src": "2962:4:18",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 3285,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2962:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "2961:6:18"
              },
              "scope": 3299,
              "src": "2887:146:18",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            }
          ],
          "scope": 3300,
          "src": "240:2795:18"
        }
      ],
      "src": "0:3036:18"
    },
    "compiler": {
      "name": "solc",
      "version": "0.6.3+commit.8dda9521.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.2.0",
    "updatedAt": "2020-12-06T13:59:24.206Z",
    "devdoc": {
      "details": "The contract deployer will initially be the only minter, burner and owner capable of adding new roles.",
      "methods": {
        "addBurner(address)": {
          "details": "The caller must have the Owner role.",
          "params": {
            "account": "The address to which the Burner role is added."
          }
        },
        "addMember(uint256,address)": {
          "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
          "params": {
            "newMember": "the new SharedRole member.",
            "roleId": "the SharedRole membership to modify."
          }
        },
        "addMinter(address)": {
          "details": "The caller must have the Owner role.",
          "params": {
            "account": "The address to which the Minter role is added."
          }
        },
        "allowance(address,address)": {
          "details": "See {IERC20-allowance}."
        },
        "approve(address,uint256)": {
          "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
        },
        "balanceOf(address)": {
          "details": "See {IERC20-balanceOf}."
        },
        "burn(uint256)": {
          "details": "Burns `value` tokens owned by `msg.sender`.",
          "params": {
            "value": "amount of tokens to burn."
          }
        },
        "constructor": {
          "params": {
            "tokenDecimals": "The number of decimals to define token precision.",
            "tokenName": "The name which describes the new token.",
            "tokenSymbol": "The ticker abbreviation of the name. Ideally < 5 chars."
          }
        },
        "decimals()": {
          "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
        },
        "decreaseAllowance(address,uint256)": {
          "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
        },
        "getMember(uint256)": {
          "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
          "params": {
            "roleId": "the ExclusiveRole membership to check."
          },
          "returns": {
            "_0": "the address of the current ExclusiveRole member."
          }
        },
        "holdsRole(uint256,address)": {
          "details": "Reverts if roleId does not correspond to an initialized role.",
          "params": {
            "memberToCheck": "the address to check.",
            "roleId": "the Role to check."
          },
          "returns": {
            "_0": "True if `memberToCheck` is a member of `roleId`."
          }
        },
        "increaseAllowance(address,uint256)": {
          "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
        },
        "isBurner(address)": {
          "params": {
            "account": "The address which is checked for the Burner role."
          },
          "returns": {
            "_0": "bool True if the provided account is a Burner."
          }
        },
        "isMinter(address)": {
          "params": {
            "account": "The address which is checked for the Minter role."
          },
          "returns": {
            "_0": "bool True if the provided account is a Minter."
          }
        },
        "mint(address,uint256)": {
          "details": "Mints `value` tokens to `recipient`, returning true on success.",
          "params": {
            "recipient": "address to mint to.",
            "value": "amount of tokens to mint."
          },
          "returns": {
            "_0": "True if the mint succeeded, or False."
          }
        },
        "name()": {
          "details": "Returns the name of the token."
        },
        "removeBurner(address)": {
          "details": "The caller must have the Owner role.",
          "params": {
            "account": "The address from which the Burner role is removed."
          }
        },
        "removeMember(uint256,address)": {
          "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
          "params": {
            "memberToRemove": "the current SharedRole member to remove.",
            "roleId": "the SharedRole membership to modify."
          }
        },
        "removeMinter(address)": {
          "details": "The caller must have the Owner role.",
          "params": {
            "account": "The address from which the Minter role is removed."
          }
        },
        "renounceMembership(uint256)": {
          "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
          "params": {
            "roleId": "the SharedRole membership to modify."
          }
        },
        "resetMember(uint256,address)": {
          "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
          "params": {
            "newMember": "the new ExclusiveRole member.",
            "roleId": "the ExclusiveRole membership to modify."
          }
        },
        "resetOwner(address)": {
          "details": "The caller must have the Owner role.",
          "params": {
            "account": "The new holder of the Owner role."
          }
        },
        "symbol()": {
          "details": "Returns the symbol of the token, usually a shorter version of the name."
        },
        "totalSupply()": {
          "details": "See {IERC20-totalSupply}."
        },
        "transfer(address,uint256)": {
          "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
        }
      },
      "title": "Burnable and mintable ERC20."
    },
    "userdoc": {
      "methods": {
        "addBurner(address)": {
          "notice": "Add Burner role to account."
        },
        "addMember(uint256,address)": {
          "notice": "Adds `newMember` to the shared role, `roleId`."
        },
        "addMinter(address)": {
          "notice": "Add Minter role to account."
        },
        "constructor": "Constructs the SyntheticToken.",
        "getMember(uint256)": {
          "notice": "Gets the current holder of the exclusive role, `roleId`."
        },
        "holdsRole(uint256,address)": {
          "notice": "Whether `memberToCheck` is a member of roleId."
        },
        "isBurner(address)": {
          "notice": "Checks if a given account holds the Burner role."
        },
        "isMinter(address)": {
          "notice": "Checks if a given account holds the Minter role."
        },
        "removeBurner(address)": {
          "notice": "Removes Burner role from account."
        },
        "removeMember(uint256,address)": {
          "notice": "Removes `memberToRemove` from the shared role, `roleId`."
        },
        "removeMinter(address)": {
          "notice": "Remove Minter role from account."
        },
        "renounceMembership(uint256)": {
          "notice": "Removes caller from the role, `roleId`."
        },
        "resetMember(uint256,address)": {
          "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
        },
        "resetOwner(address)": {
          "notice": "Reset Owner role to account."
        }
      }
    }
  }